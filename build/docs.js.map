{"version":3,"file":"docs.js","sources":["../node_modules/svelte/internal/index.mjs","../../svelecte/node_modules/svelte/internal/index.mjs","../../svelecte/src/lib/sifter.js","../../svelecte/src/lib/utils.js","../../svelecte/src/settings.js","../../svelecte/node_modules/svelte/store/index.mjs","../../svelecte/src/lib/list.js","../../svelecte/src/components/Input.svelte","../../svelecte/src/actions.js","../../svelecte/src/components/Item.svelte","../../svelecte/src/components/Control.svelte","../../svelecte/node_modules/svelte-tiny-virtual-list/src/constants.js","../../svelecte/node_modules/svelte-tiny-virtual-list/src/SizeAndPositionManager.js","../../svelecte/node_modules/svelte-tiny-virtual-list/src/VirtualList.svelte","../../svelecte/src/components/Dropdown.svelte","../node_modules/svelecte/src/Svelecte.svelte","../src/data.js","../src/examples/01-basic.svelte","../src/examples/02-basicPlain.svelte","../src/examples/03-groups.svelte","../src/examples/04-item-rendering.svelte","../src/examples/05-slot.svelte","../src/examples/07-playground.svelte","../node_modules/svelecte-element/index.js","../src/examples/08-custom-element.svelte","../src/examples/09-custom-dependent.svelte","../src/examples/10-vue.svelte","../src/docs.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.37.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.37.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/**\r\n * sifter.js\r\n * Copyright (c) 2013–2020 Brian Reavis & contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n * @author Brian Reavis <brian@thirdroute.com>\r\n */\r\n\r\n/**\r\n * Textually searches arrays and hashes of objects\r\n * by property (or multiple properties). Designed\r\n * specifically for autocomplete.\r\n *\r\n * @constructor\r\n * @param {array|object} items\r\n * @param {object} items\r\n */\r\nvar Sifter = function(items, settings) {\r\n    this.items = items;\r\n    this.settings = settings || {diacritics: true};\r\n};\r\n\r\n/**\r\n * Splits a search string into an array of individual\r\n * regexps to be used to match results.\r\n *\r\n * @param {string} query\r\n * @returns {array}\r\n */\r\nSifter.prototype.tokenize = function(query, respect_word_boundaries) {\r\n    query = trim(String(query || '').toLowerCase());\r\n    if (!query || !query.length) return [];\r\n\r\n    var i, n, regex, letter;\r\n    var tokens = [];\r\n    var words = query.split(/ +/);\r\n\r\n    for (i = 0, n = words.length; i < n; i++) {\r\n        regex = escape_regex(words[i]);\r\n        if (this.settings.diacritics) {\r\n            for (letter in DIACRITICS) {\r\n                if (DIACRITICS.hasOwnProperty(letter)) {\r\n                    regex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\r\n                }\r\n            }\r\n        }\r\n        if (respect_word_boundaries) regex = \"\\\\b\"+regex\r\n        tokens.push({\r\n            string : words[i],\r\n            regex  : new RegExp(regex, 'i')\r\n        });\r\n    }\r\n\r\n    return tokens;\r\n};\r\n\r\n/**\r\n * Iterates over arrays and hashes.\r\n *\r\n * ```\r\n * this.iterator(this.items, function(item, id) {\r\n *    // invoked for each item\r\n * });\r\n * ```\r\n *\r\n * @param {array|object} object\r\n */\r\nSifter.prototype.iterator = function(object, callback) {\r\n    var iterator;\r\n    if (Array.isArray(object)) {\r\n        iterator = Array.prototype.forEach || function(callback) {\r\n            for (var i = 0, n = this.length; i < n; i++) {\r\n                callback(this[i], i, this);\r\n            }\r\n        };\r\n    } else {\r\n        iterator = function(callback) {\r\n            for (var key in this) {\r\n                if (this.hasOwnProperty(key)) {\r\n                    callback(this[key], key, this);\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    iterator.apply(object, [callback]);\r\n};\r\n\r\n/**\r\n * Returns a function to be used to score individual results.\r\n *\r\n * Good matches will have a higher score than poor matches.\r\n * If an item is not a match, 0 will be returned by the function.\r\n *\r\n * @param {object|string} search\r\n * @param {object} options (optional)\r\n * @returns {function}\r\n */\r\nSifter.prototype.getScoreFunction = function(search, options) {\r\n    var self, fields, tokens, token_count, nesting;\r\n\r\n    self        = this;\r\n    search      = self.prepareSearch(search, options);\r\n    tokens      = search.tokens;\r\n    fields      = search.options.fields;\r\n    token_count = tokens.length;\r\n    nesting     = search.options.nesting;\r\n\r\n    /**\r\n     * Calculates how close of a match the\r\n     * given value is against a search token.\r\n     *\r\n     * @param {string | number} value\r\n     * @param {object} token\r\n     * @return {number}\r\n     */\r\n    var scoreValue = function(value, token) {\r\n        var score, pos;\r\n\r\n        if (!value) return 0;\r\n        value = String(value || '');\r\n        pos = value.search(token.regex);\r\n        if (pos === -1) return 0;\r\n        score = token.string.length / value.length;\r\n        if (pos === 0) score += 0.5;\r\n        return score;\r\n    };\r\n\r\n    /**\r\n     * Calculates the score of an object\r\n     * against the search query.\r\n     *\r\n     * @param {object} token\r\n     * @param {object} data\r\n     * @return {number}\r\n     */\r\n    var scoreObject = (function() {\r\n        var field_count = fields.length;\r\n        if (!field_count) {\r\n            return function() { return 0; };\r\n        }\r\n        if (field_count === 1) {\r\n            return function(token, data) {\r\n                return scoreValue(getattr(data, fields[0], nesting), token);\r\n            };\r\n        }\r\n        return function(token, data) {\r\n            for (var i = 0, sum = 0; i < field_count; i++) {\r\n                sum += scoreValue(getattr(data, fields[i], nesting), token);\r\n            }\r\n            return sum / field_count;\r\n        };\r\n    })();\r\n\r\n    if (!token_count) {\r\n        return function() { return 0; };\r\n    }\r\n    if (token_count === 1) {\r\n        return function(data) {\r\n            return scoreObject(tokens[0], data);\r\n        };\r\n    }\r\n\r\n    if (search.options.conjunction === 'and') {\r\n        return function(data) {\r\n            var score;\r\n            for (var i = 0, sum = 0; i < token_count; i++) {\r\n                score = scoreObject(tokens[i], data);\r\n                if (score <= 0) return 0;\r\n                sum += score;\r\n            }\r\n            return sum / token_count;\r\n        };\r\n    } else {\r\n        return function(data) {\r\n            for (var i = 0, sum = 0; i < token_count; i++) {\r\n                sum += scoreObject(tokens[i], data);\r\n            }\r\n            return sum / token_count;\r\n        };\r\n    }\r\n};\r\n\r\n/**\r\n * Returns a function that can be used to compare two\r\n * results, for sorting purposes. If no sorting should\r\n * be performed, `null` will be returned.\r\n *\r\n * @param {string|object} search\r\n * @param {object} options\r\n * @return function(a,b)\r\n */\r\nSifter.prototype.getSortFunction = function(search, options) {\r\n    var i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\r\n\r\n    self   = this;\r\n    search = self.prepareSearch(search, options);\r\n    sort   = (!search.query && options.sort_empty) || options.sort;\r\n\r\n    /**\r\n     * Fetches the specified sort field value\r\n     * from a search result item.\r\n     *\r\n     * @param  {string} name\r\n     * @param  {object} result\r\n     */\r\n    get_field = function(name, result) {\r\n        if (name === '$score') return result.score;\r\n        return getattr(self.items[result.id], name, options.nesting);\r\n    };\r\n\r\n    // parse options\r\n    fields = [];\r\n    if (sort) {\r\n        for (i = 0, n = sort.length; i < n; i++) {\r\n            if (search.query || sort[i].field !== '$score') {\r\n                fields.push(sort[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // the \"$score\" field is implied to be the primary\r\n    // sort field, unless it's manually specified\r\n    if (search.query) {\r\n        implicit_score = true;\r\n        for (i = 0, n = fields.length; i < n; i++) {\r\n            if (fields[i].field === '$score') {\r\n                implicit_score = false;\r\n                break;\r\n            }\r\n        }\r\n        if (implicit_score) {\r\n            fields.unshift({field: '$score', direction: 'desc'});\r\n        }\r\n    } else {\r\n        for (i = 0, n = fields.length; i < n; i++) {\r\n            if (fields[i].field === '$score') {\r\n                fields.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    multipliers = [];\r\n    for (i = 0, n = fields.length; i < n; i++) {\r\n        multipliers.push(fields[i].direction === 'desc' ? -1 : 1);\r\n    }\r\n\r\n    // build function\r\n    fields_count = fields.length;\r\n    if (!fields_count) {\r\n        return null;\r\n    } else if (fields_count === 1) {\r\n        field = fields[0].field;\r\n        multiplier = multipliers[0];\r\n        return function(a, b) {\r\n            return multiplier * cmp(\r\n                get_field(field, a),\r\n                get_field(field, b)\r\n            );\r\n        };\r\n    } else {\r\n        return function(a, b) {\r\n            var i, result, a_value, b_value, field;\r\n            for (i = 0; i < fields_count; i++) {\r\n                field = fields[i].field;\r\n                result = multipliers[i] * cmp(\r\n                    get_field(field, a),\r\n                    get_field(field, b)\r\n                );\r\n                if (result) return result;\r\n            }\r\n            return 0;\r\n        };\r\n    }\r\n};\r\n\r\n/**\r\n * Parses a search query and returns an object\r\n * with tokens and fields ready to be populated\r\n * with results.\r\n *\r\n * @param {string} query\r\n * @param {object} options\r\n * @returns {object}\r\n */\r\nSifter.prototype.prepareSearch = function(query, options) {\r\n    if (typeof query === 'object') return query;\r\n\r\n    options = extend({}, options);\r\n\r\n    var option_fields     = options.fields;\r\n    var option_sort       = options.sort;\r\n    var option_sort_empty = options.sort_empty;\r\n\r\n    if (option_fields && !Array.isArray(option_fields)) options.fields = [option_fields];\r\n    if (option_sort && !Array.isArray(option_sort)) options.sort = [option_sort];\r\n    if (option_sort_empty && !Array.isArray(option_sort_empty)) options.sort_empty = [option_sort_empty];\r\n\r\n    return {\r\n        options : options,\r\n        query   : String(query || '').toLowerCase(),\r\n        tokens  : this.tokenize(query, options.respect_word_boundaries),\r\n        total   : 0,\r\n        items   : []\r\n    };\r\n};\r\n\r\n/**\r\n * Searches through all items and returns a sorted array of matches.\r\n *\r\n * The `options` parameter can contain:\r\n *\r\n *   - fields {string|array}\r\n *   - sort {array}\r\n *   - score {function}\r\n *   - filter {bool}\r\n *   - limit {integer}\r\n *\r\n * Returns an object containing:\r\n *\r\n *   - options {object}\r\n *   - query {string}\r\n *   - tokens {array}\r\n *   - total {int}\r\n *   - items {array}\r\n *\r\n * @param {string} query\r\n * @param {object} options\r\n * @returns {object}\r\n */\r\nSifter.prototype.search = function(query, options) {\r\n    var self = this, value, score, search, calculateScore;\r\n    var fn_sort;\r\n    var fn_score;\r\n\r\n    search  = this.prepareSearch(query, options);\r\n    options = search.options;\r\n    query   = search.query;\r\n\r\n    // generate result scoring function\r\n    fn_score = options.score || self.getScoreFunction(search);\r\n\r\n    // perform search and sort\r\n    if (query.length) {\r\n        self.iterator(self.items, function(item, id) {\r\n            score = fn_score(item);\r\n            if (options.filter === false || score > 0) {\r\n                search.items.push({'score': score, 'id': id});\r\n            }\r\n        });\r\n    } else {\r\n        self.iterator(self.items, function(item, id) {\r\n            search.items.push({'score': 1, 'id': id});\r\n        });\r\n    }\r\n\r\n    fn_sort = self.getSortFunction(search, options);\r\n    if (fn_sort) search.items.sort(fn_sort);\r\n\r\n    // apply limits\r\n    search.total = search.items.length;\r\n    if (typeof options.limit === 'number') {\r\n        search.items = search.items.slice(0, options.limit);\r\n    }\r\n\r\n    return search;\r\n};\r\n\r\n// utilities\r\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n\r\nvar cmp = function(a, b) {\r\n    if (typeof a === 'number' && typeof b === 'number') {\r\n        return a > b ? 1 : (a < b ? -1 : 0);\r\n    }\r\n    a = asciifold(String(a || ''));\r\n    b = asciifold(String(b || ''));\r\n    if (a > b) return 1;\r\n    if (b > a) return -1;\r\n    return 0;\r\n};\r\n\r\nvar extend = function(a, b) {\r\n    var i, n, k, object;\r\n    for (i = 1, n = arguments.length; i < n; i++) {\r\n        object = arguments[i];\r\n        if (!object) continue;\r\n        for (k in object) {\r\n            if (object.hasOwnProperty(k)) {\r\n                a[k] = object[k];\r\n            }\r\n        }\r\n    }\r\n    return a;\r\n};\r\n\r\n/**\r\n * A property getter resolving dot-notation\r\n * @param  {Object}  obj     The root object to fetch property on\r\n * @param  {String}  name    The optionally dotted property name to fetch\r\n * @param  {Boolean} nesting Handle nesting or not\r\n * @return {Object}          The resolved property value\r\n */\r\nvar getattr = function(obj, name, nesting) {\r\n    if (!obj || !name) return;\r\n    if (!nesting) return obj[name];\r\n    var names = name.split(\".\");\r\n    while(names.length && (obj = obj[names.shift()]));\r\n    return obj;\r\n};\r\n\r\nvar trim = function(str) {\r\n    return (str + '').replace(/^\\s+|\\s+$|/g, '');\r\n};\r\n\r\nvar escape_regex = function(str) {\r\n    return (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\r\n};\r\n\r\nvar DIACRITICS = {\r\n    'a': '[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]',\r\n    'b': '[b␢βΒB฿𐌁ᛒ]',\r\n    'c': '[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]',\r\n    'd': '[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]',\r\n    'e': '[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]',\r\n    'f': '[fƑƒḞḟ]',\r\n    'g': '[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]',\r\n    'h': '[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]',\r\n    'i': '[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]',\r\n    'j': '[jȷĴĵɈɉʝɟʲ]',\r\n    'k': '[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]',\r\n    'l': '[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]',\r\n    'n': '[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]',\r\n    'o': '[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]',\r\n    'p': '[pṔṕṖṗⱣᵽƤƥᵱ]',\r\n    'q': '[qꝖꝗʠɊɋꝘꝙq̃]',\r\n    'r': '[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]',\r\n    's': '[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]',\r\n    't': '[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]',\r\n    'u': '[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]',\r\n    'v': '[vṼṽṾṿƲʋꝞꝟⱱʋ]',\r\n    'w': '[wẂẃẀẁŴŵẄẅẆẇẈẉ]',\r\n    'x': '[xẌẍẊẋχ]',\r\n    'y': '[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]',\r\n    'z': '[zŹźẐẑŽžŻżẒẓẔẕƵƶ]'\r\n};\r\n\r\nexport const asciifold = (function() {\r\n    var i, n, k, chunk;\r\n    var foreignletters = '';\r\n    var lookup = {};\r\n    for (k in DIACRITICS) {\r\n        if (DIACRITICS.hasOwnProperty(k)) {\r\n            chunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\r\n            foreignletters += chunk;\r\n            for (i = 0, n = chunk.length; i < n; i++) {\r\n                lookup[chunk.charAt(i)] = k;\r\n            }\r\n        }\r\n    }\r\n    var regexp = new RegExp('[' +  foreignletters + ']', 'g');\r\n    return function(str) {\r\n        return str.replace(regexp, function(foreignletter) {\r\n            return lookup[foreignletter];\r\n        }).toLowerCase();\r\n    };\r\n})();\r\n\r\n\r\n// export\r\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\nexport default Sifter;\r\n\r\n","import { asciifold } from './sifter';\r\n\r\n// source: https://github.com/rob-balfre/svelte-select/blob/master/src/utils/isOutOfViewport.js\r\nexport function isOutOfViewport(elem) {\r\n  const bounding = elem.getBoundingClientRect();\r\n  const out = {};\r\n\r\n  out.top = bounding.top < 0 || bounding.top - bounding.height < 0;\r\n  out.left = bounding.left < 0;\r\n  out.bottom = bounding.bottom > (window.innerHeight || document.documentElement.clientHeight);\r\n  out.right = bounding.right > (window.innerWidth || document.documentElement.clientWidth);\r\n  out.any = out.top || out.left || out.bottom || out.right;\r\n\r\n  return out;\r\n};\r\n\r\nexport let xhr = null;\r\n\r\nexport function fetchRemote(url) {\r\n  return function(query, cb) {\r\n    return new Promise((resolve, reject) => {\r\n      xhr = new XMLHttpRequest();\r\n      xhr.open('GET', `${url.replace('[query]', encodeURIComponent(query))}`);\r\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n      xhr.send();\r\n      \r\n      xhr.onreadystatechange = () => {\r\n        if (xhr.readyState === 4) {\r\n          if (xhr.status === 200) {\r\n            const resp = JSON.parse(xhr.response);\r\n            resolve(cb ? cb(resp) : resp.data || resp.items || resp.options || resp);\r\n          } else {\r\n            reject();\r\n          }\r\n        } \r\n      };\r\n    });\r\n  }\r\n}\r\n\r\nlet timeout;\r\nexport function debounce(fn, delay) {\r\n\treturn function() {\r\n\t\tconst self = this;\r\n\t\tconst args = arguments;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(function() {\r\n      fn.apply(self, args)\r\n\t\t}, delay);\r\n\t};\r\n};\r\n\r\nlet itemHtml;\r\n\r\nexport function highlightSearch(item, isSelected, $inputValue, formatter) {\r\n  const itemHtmlText = formatter ? formatter(item, isSelected) : item;\r\n  \r\n  if ($inputValue == '' || item.isSelected) {\r\n    return '<div class=\"sv-item-content\">' + itemHtmlText + '</div>';\r\n  }\r\n\r\n  if (!itemHtml) {\r\n    itemHtml = document.createElement('div');\r\n    itemHtml.className = 'sv-item-content';\r\n  }\r\n  itemHtml.innerHTML = itemHtmlText;\r\n  \r\n  // const regex = new RegExp(`(${asciifold($inputValue)})`, 'ig');\r\n  const pattern = asciifold($inputValue);\r\n  pattern.split(' ').filter(e => e).forEach(pat => {\r\n    highlight(itemHtml, pat);\r\n  });\r\n  \r\n  return itemHtml.outerHTML;\r\n}\r\n\r\n/**\r\n * highlight function code from selectize itself. We pass raw html through @html svelte tag\r\n * base from https://github.com/selectize/selectize.js/blob/master/src/contrib/highlight.js & edited\r\n */\r\nconst highlight = function(node, regex) {\r\n  let skip = 0;\r\n  // Wrap matching part of text node with highlighting <span>, e.g.\r\n  // Soccer  ->  <span class=\"highlight\">Soc</span>cer for pattern 'soc'\r\n  if (node.nodeType === 3) {\r\n    const folded = asciifold(node.data);\r\n    let pos = folded.indexOf(regex);\r\n    pos -= (folded.substr(0, pos).toUpperCase().length - folded.substr(0, pos).length);\r\n    if (pos >= 0 ) {\r\n      const spannode = document.createElement('span');\r\n      spannode.className = 'highlight';\r\n      const middlebit = node.splitText(pos);\r\n      const endbit = middlebit.splitText(regex.length);\r\n      const middleclone = middlebit.cloneNode(true);\r\n      spannode.appendChild(middleclone);\r\n      middlebit.parentNode.replaceChild(spannode, middlebit);\r\n      skip = 1;\r\n    }\r\n  } \r\n  // Recurse element node, looking for child text nodes to highlight, unless element \r\n  // is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\r\n  else if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' )) {\r\n    for (var i = 0; i < node.childNodes.length; ++i) {\r\n      i += highlight(node.childNodes[i], regex);\r\n    }\r\n  }\r\n  return skip;\r\n};\r\n\r\n/**\r\n * Automatic setter for 'valueField' or 'labelField' when they are not set\r\n */\r\nexport function fieldInit(type, options, config) {\r\n  const isValue = type === 'value';\r\n  if (config.isOptionArray) return isValue ? 'value' : 'label';\r\n  let val = isValue  ? 'value' : 'text';              // selectize style defaults\r\n  if (options && options.length) {\r\n    const firstItem = options[0].options ? options[0].options[0] : options[0];\r\n    const autoAddItem = isValue ? 0 : 1;\r\n    const guessList = isValue\r\n      ? ['id', 'value', 'ID']\r\n      : ['name', 'title', 'label'];\r\n    val = Object.keys(firstItem).filter(prop => guessList.includes(prop))\r\n      .concat([Object.keys(firstItem)[autoAddItem]])  // auto add field (used as fallback)\r\n      .shift();  \r\n  }\r\n  return val;\r\n}","const settings = {\r\n  valueField: null,\r\n  labelField: null,\r\n  required: false,\r\n  placeholder: 'Select',\r\n  searchable: true,\r\n  disabled: false,\r\n  // ui\r\n  clearable: false,\r\n  selectOnTab: false,\r\n  // multi\r\n  multiple: false,\r\n  max: 0,\r\n  collapseSelection: false, // enable collapsible multiple selection\r\n  // html\r\n  name: null, // if name is defined, <select> element is created as well\r\n  // create\r\n  creatable: false,\r\n  creatablePrefix: '*',\r\n  delimiter: ',',\r\n  // virtual list\r\n  virtualList: false,\r\n  vlItemSize: null,\r\n  vlHeight: null,\r\n  // sifter\r\n  sortRemoteResults: true,\r\n  // i18n\r\n  i18n: {\r\n    empty: 'No options',\r\n    nomatch: 'No matching options',    \r\n    max: num => `Maximum items ${num} selected`,\r\n    fetchBefore: 'Type to search',\r\n    fetchEmpty: 'No data related to your search',\r\n    collapsedSelection: count => `${count} selected`\r\n  },\r\n  collapseSelectionFn: function(selectionCount, selection) {\r\n    return settings.i18n.collapsedSelection(selectionCount);\r\n  }\r\n}\r\n\r\nexport default settings;\r\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import Sifter from './sifter';\r\n\r\n\r\nexport function flatList(options, config) {\r\n  const flatOpts = options.reduce((res, opt, i) => {\r\n    if (config.isOptionArray) {\r\n      res.push({\r\n        [config.valueField]: i,\r\n        [config.labelField]: opt\r\n      });\r\n      return res;\r\n    }\r\n    if (opt.options && opt.options.length) {\r\n      config.optionsWithGroups = true;\r\n      res.push({ label: opt.label, $isGroupHeader: true });\r\n      res.push(...opt.options.map(_opt => {\r\n        _opt.$isGroupItem = true;\r\n        return _opt;\r\n      }));\r\n      return res;\r\n    }\r\n    res.push(opt);\r\n    return res;\r\n  }, []);\r\n  updateOptionProps(flatOpts, config);\r\n  return flatOpts;\r\n}\r\n\r\nfunction updateOptionProps(options, config) {\r\n  if (config.isOptionArray) {\r\n    if (!config.optionProps) {\r\n      config.optionProps = ['value', 'label'];\r\n    }\r\n  }\r\n  options.some(opt => {\r\n    if (opt.$isGroupHeader) return false;\r\n    config.optionProps = getFilterProps(opt);\r\n    return true;\r\n  })\r\n}\r\n\r\nfunction getFilterProps(object) {\r\n  if (object.options) object = object.options[0];\r\n  const exclude = ['isSelected', 'isDisabled' ,'selected', 'disabled', '$isGroupHeader', '$isGroupItem'];\r\n  return Object.keys(object).filter(prop => !exclude.includes(prop));\r\n}\r\n\r\nexport function filterList(options, inputValue, excludeSelected, sifterSearchField, sifterSortField, config) {\r\n  if (excludeSelected) {\r\n    options = options\r\n      .filter(opt => !opt.isSelected)\r\n      .filter((opt, idx, self) => {\r\n        if (opt.$isGroupHeader &&\r\n          (\r\n            (self[idx + 1] && self[idx + 1].$isGroupHeader) \r\n          || self.length <= 1\r\n          || self.length - 1 === idx\r\n          )\r\n        ) return false;\r\n        return true;\r\n      })\r\n  }\r\n  if (!inputValue) return options;\r\n\r\n  const sifter = new Sifter(options);\r\n  /**\r\n   * Sifter is used for searching to provide rich filter functionality.\r\n   * But it degradate nicely, when optgroups are present\r\n  */\r\n  if (config.optionsWithGroups) {  // disable sorting \r\n    sifter.getSortFunction = () => null;\r\n  }\r\n  let conjunction = 'and';\r\n  if (inputValue.startsWith('|| ')) {\r\n    conjunction = 'or';\r\n    inputValue = inputValue.substr(2);\r\n  }\r\n\r\n  const result = sifter.search(inputValue, {\r\n    fields: sifterSearchField || config.optionProps,\r\n    sort: createSifterSortField(sifterSortField || config.labelField),\r\n    conjunction: conjunction\r\n  });\r\n\r\n  const mapped = config.optionsWithGroups\r\n    ? result.items.reduce((res, item) => {\r\n        const opt = options[item.id];\r\n        if (excludeSelected && opt.isSelected) return res;\r\n        const lastPos = res.push(opt);\r\n        if (opt.$isGroupItem) {\r\n          const prevItems = options.slice(0, item.id);\r\n          let prev = null;\r\n          do {\r\n            prev = prevItems.pop();\r\n            prev && prev.$isGroupHeader && !res.includes(prev) && res.splice(lastPos - 1, 0, prev);\r\n          } while (prev && !prev.$isGroupHeader);\r\n        }\r\n        return res;\r\n      }, [])\r\n    : result.items.map(item => options[item.id])\r\n  return mapped;\r\n}\r\n\r\nfunction createSifterSortField(prop) {\r\n  return [{ field: prop, direction: 'asc'}];\r\n}\r\n\r\nexport function indexList(options, includeCreateRow, config)  {\r\n  const map = config.optionsWithGroups\r\n    ? options.reduce((res, opt, index) => {\r\n      res.push(opt.$isGroupHeader ? '' : index);\r\n      return res;\r\n    }, [])\r\n    : Object.keys(options);\r\n\r\n  return {\r\n    map: map,\r\n    first:  map[0] !== '' ? 0 : 1,\r\n    last: map.length ? map.length - (includeCreateRow ? 0 : 1) : 0,\r\n    hasCreateRow: !!includeCreateRow,\r\n    next(curr, prevOnUndefined) {\r\n      const val = this.map[++curr];\r\n      if (this.hasCreateRow && curr === this.last) return this.last;\r\n      if (val === '') return this.next(curr);\r\n      if (val === undefined) {\r\n        if (curr > this.map.length) curr = this.first - 1;\r\n        return prevOnUndefined === true ? this.prev(curr) : this.next(curr);\r\n      }\r\n      return val;\r\n    },\r\n    prev(curr) {\r\n      const val = this.map[--curr];\r\n      if (this.hasCreateRow && curr === this.first) return this.first;\r\n      if (val === '') return this.prev(curr);\r\n      if (!val) return this.last;\r\n      return val;\r\n    }\r\n  };\r\n}\r\n","<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n\r\n  export const focus = () => inputRef.focus();\r\n  export let placeholder;\r\n  export let searchable;\r\n  export let disabled;\r\n  export let multiple;\r\n  /** internal props */\r\n  export let inputValue;\r\n  export let hasDropdownOpened;\r\n  export let selectedOptions;\r\n\r\n  let inputRef = null;\r\n  let shadowWidth = 0;\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  $: isSingleFilled = selectedOptions.length > 0 && multiple === false;\r\n  $: placeholderText = selectedOptions.length > 0 ? '' : placeholder;\r\n  $: shadowText = $inputValue || placeholderText;\r\n  $: widthAddition = selectedOptions.length === 0 ? 19 : 12;\r\n  $: inputStyle = `width: ${isSingleFilled ? 2 : shadowWidth + widthAddition}px`;\r\n\r\n  let disableEventBubble = false;\r\n\r\n  function onKeyDown(e) {\r\n    disableEventBubble = ['Enter', 'Escape'].includes(e.key) && $hasDropdownOpened;\r\n    dispatch('keydown', e);\r\n  }\r\n\r\n  /** Stop event propagation on keyup, when dropdown is opened. Typically this will prevent form submit */\r\n  function onKeyUp(e) {\r\n    if (disableEventBubble) {\r\n      e.stopImmediatePropagation();\r\n      e.preventDefault();\r\n    }\r\n    disableEventBubble = false;\r\n  }\r\n</script>\r\n\r\n<!--<div class=\"inputRow\"> -->\r\n<input type=\"text\" class=\"inputBox\"\r\n  disabled={disabled}\r\n  readonly={!searchable}\r\n  style={inputStyle} placeholder={placeholderText}\r\n  bind:this={inputRef} \r\n  bind:value={$inputValue} \r\n  on:focus\r\n  on:blur\r\n  on:keydown={onKeyDown}\r\n  on:keyup={onKeyUp}\r\n  on:paste\r\n  on:change|stopPropagation\r\n>\r\n<div class=\"shadow-text\" bind:clientWidth={shadowWidth}>{shadowText}</div>\r\n<!--</div>-->\r\n\r\n<style>\r\n.inputBox {\r\n  box-sizing: content-box;\r\n  width: 19px;\r\n  background: rgba(0, 0, 0, 0) none repeat scroll 0px center;\r\n  border: 0px none;\r\n  font-size: inherit;\r\n  font-family: inherit;\r\n  opacity: 1;\r\n  outline: currentcolor none 0px;\r\n  padding: 0px;\r\n  color: inherit;\r\n  margin: -2px 0 0;\r\n  height: 20px;\r\n}\r\n.inputBox:read-only { width: 100%; }\r\n.shadow-text {\r\n  opacity: 0;\r\n  position: absolute; left: 100%;\r\n  z-index: -100;\r\n  min-width: 24px;\r\n  white-space: nowrap;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n</style>","const mouseDownAction = e => e.preventDefault();\r\n\r\nexport default function(node, {item, index}) {\r\n\r\n  function selectAction(e) {\r\n    const eventType = e.target.closest('[data-action=\"deselect\"]') ? 'deselect' : 'select';\r\n    node.dispatchEvent(new CustomEvent(eventType, {\r\n      bubble: true,\r\n      detail: item\r\n    }));\r\n  }\r\n\r\n  function hoverAction() {\r\n    node.dispatchEvent(new CustomEvent('hover', {\r\n      detail: index\r\n    }));\r\n  }\r\n  node.onmousedown = mouseDownAction;\r\n  node.onclick = selectAction;\r\n  // !item.isSelected && \r\n  node.addEventListener('mouseenter', hoverAction);\r\n\r\n  return {\r\n    update(updated) {\r\n      item = updated.item;\r\n      index = updated.index;\r\n    },\r\n    destroy() {\r\n      node.removeEventListener('mousedown', mouseDownAction);\r\n      node.removeEventListener('click', selectAction);\r\n      // !item.isSelected && \r\n      node.removeEventListener('mouseenter', hoverAction);\r\n    }\r\n  }\r\n}\r\n","<script>\r\n  import itemActions from './../actions.js';\r\n  import { highlightSearch } from './../lib/utils.js';\r\n\r\n  export let inputValue;  // value only\r\n\r\n  export let index = -1;\r\n  export let item = {};\r\n  export let isSelected = false;\r\n  export let isDisabled = false;\r\n  export let isMultiple = false;\r\n\r\n  export let formatter = null;\r\n</script>\r\n\r\n{#if item.$isGroupHeader}\r\n<div class=\"optgroup-header\" on:mousedown|preventDefault><b>{item.label}</b></div>\r\n{:else}\r\n<div class=\"sv-item\"\r\n  title={item._created ? 'Created item' : ''}\r\n  class:is-disabled={isDisabled}\r\n  use:itemActions={{item, index}}\r\n  on:select\r\n  on:deselect\r\n  on:hover\r\n>\r\n  {@html highlightSearch(item, isSelected, inputValue, formatter)}\r\n{#if isSelected && isMultiple}\r\n  <a href=\"#deselect\" class=\"sv-item-btn\" tabindex=\"-1\" data-action=\"deselect\">\r\n    <svg height=\"16\" width=\"16\" viewBox=\"0 0 20 20\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z\"></path></svg>\r\n  </a>\r\n{/if}\r\n</div>\r\n{/if}\r\n\r\n<style>\r\n.optgroup-header {\r\n  padding: 3px 3px 3px 6px;\r\n  font-weight: bold;\r\n}\r\n:global(.has-multiSelection .sv-item) {\r\n  background-color: #efefef;\r\n  margin: 2px 4px 2px 0;\r\n}\r\n:global(.has-multiSelection .sv-item-btn)  {\r\n  display: flex;\r\n}\r\n:global(.has-multiSelection .sv-item-content),\r\n:global(.sv-dropdown-content .sv-item) {\r\n  padding: 3px 3px 3px 6px;\r\n}\r\n:global(.sv-dd-item-active > .sv-item) {\r\n  background-color: #F2F5F8;\r\n}\r\n:global(.sv-item) {\r\n  display: flex;\r\n  min-width: 0px;\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  cursor: default;\r\n}\r\n:global(.sv-item.is-disabled) { opacity: 0.5; cursor: not-allowed; }\r\n\r\n:global(.sv-item-content) {\r\n  color: rgb(51, 51, 51);\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  overflow: hidden;\r\n  width: 100%;\r\n}\r\n:global(.sv-item-btn) {\r\n  display: none;\r\n  position: relative;\r\n  align-items: center;\r\n  align-self: stretch;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n}\r\n:global(.sv-item-btn:hover) { background-color: #ddd; }\r\n:global(.highlight) { background-color: yellow; }\r\n</style>\r\n","<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n  import Input from './Input.svelte';\r\n  import Item from './Item.svelte';\r\n\r\n  export let clearable;\r\n  export let searchable;\r\n  export let renderer;\r\n  export let disabled;\r\n  export let placeholder;\r\n  export let multiple;\r\n  export let collapseSelection;\r\n  /** internal props */\r\n  export let inputValue;\r\n  export let hasFocus;\r\n  export let hasDropdownOpened;\r\n  export let selectedOptions;           // passed as array\r\n  export let isFetchingData;\r\n\r\n\r\n  export function focusControl(event) {\r\n    if (disabled) return;\r\n    if (!event) {\r\n      !$hasFocus && refInput.focus();\r\n      $hasDropdownOpened = true;\r\n      return;\r\n    }\r\n    if (!$hasFocus) {\r\n      refInput.focus();\r\n    } else {\r\n      $hasDropdownOpened = !$hasDropdownOpened;\r\n    }\r\n  }\r\n\r\n  /** ************************************ context */\r\n  const dispatch = createEventDispatcher();\r\n  \r\n  let doCollapse = true;\r\n  let refInput = undefined;\r\n\r\n  function onFocus() {\r\n    $hasFocus = true; \r\n    $hasDropdownOpened = true;\r\n    setTimeout(() => {\r\n    doCollapse = false;\r\n    }, 150);\r\n  }\r\n\r\n  function onBlur() {\r\n    $hasFocus = false;\r\n    $hasDropdownOpened = false;\r\n    $inputValue = ''; // reset\r\n    setTimeout(() => {\r\n      doCollapse = true;\r\n    }, 100);\r\n  }\r\n\r\n</script>\r\n\r\n<div class=\"sv-control\" class:is-active={$hasFocus} class:is-disabled={disabled}\r\n  on:mousedown|preventDefault\r\n  on:click|preventDefault={focusControl}\r\n>\r\n  <slot name=\"icon\"></slot>\r\n  <!-- selection & input -->\r\n  <div class=\"sv-content sv-input-row\" class:has-multiSelection={multiple}>\r\n    {#if selectedOptions.length }\r\n      {#if multiple && collapseSelection && doCollapse}\r\n        { collapseSelection(selectedOptions.length, selectedOptions) }\r\n      {:else}\r\n      {#each selectedOptions as opt}\r\n      <Item formatter={renderer} item={opt} isSelected={true} on:deselect isMultiple={multiple} inputValue={$inputValue}></Item>\r\n      {/each}\r\n      {/if}\r\n    {/if}\r\n    <!-- input -->\r\n    <Input {disabled} {searchable} {placeholder} {multiple}\r\n      {inputValue} {hasDropdownOpened} {selectedOptions}\r\n      bind:this={refInput}\r\n      on:focus={onFocus}\r\n      on:blur={onBlur}\r\n      on:keydown\r\n      on:paste\r\n    ></Input>\r\n  </div>\r\n  <!-- buttons, indicators -->\r\n  <div class=\"indicator\" class:is-loading={isFetchingData} >\r\n    {#if clearable && selectedOptions.length && !disabled}\r\n    <div aria-hidden=\"true\" class=\"indicator-container close-icon\"\r\n      on:mousedown|preventDefault\r\n      on:click={() => dispatch('deselect')}\r\n    >\r\n      <svg class=\"indicator-icon\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z\"></path></svg>\r\n    </div>\r\n    {/if}\r\n    {#if clearable}\r\n    <span class=\"indicator-separator\"></span>\r\n    {/if}\r\n    <div aria-hidden=\"true\" class=\"indicator-container\" on:mousedown|preventDefault>\r\n      <svg width=\"20\" class=\"indicator-icon\" viewBox=\"0 0 20 20\" aria-hidden=\"true\" focusable=\"false\">\r\n        <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"></path>\r\n      </svg>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n/** global default styles for wrapper div (*/\r\n:global(.svelecte-control) .sv-control             { border: 1px solid #ccc; border-radius: 4px; min-height: 38px; }\r\n:global(.svelecte-control) .sv-control.is-active   { border: 1px solid #555; }\r\n.sv-control.is-disabled {\r\n  background-color: rgb(242, 242, 242);\r\n  border-color: rgb(230, 230, 230);\r\n  cursor: default;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  outline: currentcolor none 0px !important;\r\n  position: relative;\r\n  transition: all 100ms ease 0s;\r\n}\r\n.sv-control {\r\n  display: flex;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n}\r\n.sv-content {\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1 1 0%;\r\n  flex-wrap: nowrap;\r\n  padding: 0 0 0 6px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  box-sizing: border-box;\r\n}\r\n.sv-content.sv-input-row.has-multiSelection {\r\n  flex-flow: wrap;\r\n}\r\n.indicator {\r\n  position: relative;\r\n  align-items: center;\r\n  align-self: stretch;\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  box-sizing: border-box;\r\n}\r\n.indicator-container {\r\n  color: rgb(204, 204, 204);\r\n  display: flex;\r\n  padding: 8px;\r\n  transition: color 150ms ease 0s;\r\n  box-sizing: border-box;\r\n}\r\n.indicator-container:hover { color: rgb(153, 153, 153); }\r\n.indicator-separator {\r\n  align-self: stretch;\r\n  background-color: rgb(204, 204, 204);\r\n  margin-bottom: 8px;\r\n  margin-top: 8px;\r\n  width: 1px;\r\n  box-sizing: border-box;\r\n}\r\n.indicator-icon {\r\n  display: inline-block;\r\n  fill: currentcolor;\r\n  line-height: 1;\r\n  stroke: currentcolor;\r\n  stroke-width: 0px;\r\n}\r\n.is-loading:after {\r\n  animation: spinAround .5s infinite linear;\r\n  border: 3px solid #dbdbdb;\r\n  border-radius: 290486px;\r\n  border-right-color: transparent;\r\n  border-top-color: transparent;\r\n  content: \"\";\r\n  display: block;\r\n  height: 20px;\r\n  width: 20px;\r\n  left: calc(50% - 10px);\r\n  top: calc(50% - 10px);\r\n  position: absolute !important;\r\n  box-sizing: border-box;\r\n}\r\n\r\n@keyframes spinAround {\r\n  from {\r\n    transform: rotate(0deg)\r\n  }\r\n  to {\r\n    transform: rotate(359deg)\r\n  }\r\n}\r\n</style>","export const ALIGNMENT = {\n\tAUTO:   'auto',\n\tSTART:  'start',\n\tCENTER: 'center',\n\tEND:    'end',\n};\n\nexport const DIRECTION = {\n\tHORIZONTAL: 'horizontal',\n\tVERTICAL:   'vertical',\n};\n\nexport const SCROLL_CHANGE_REASON = {\n\tOBSERVED:  0,\n\tREQUESTED: 1,\n};\n\nexport const SCROLL_PROP = {\n\t[DIRECTION.VERTICAL]:   'scrollTop',\n\t[DIRECTION.HORIZONTAL]: 'scrollLeft',\n};","/* Forked from react-virtualized 💖 */\nimport { ALIGNMENT } from './constants';\n\n/**\n * @callback ItemSizeGetter\n * @param {number} index\n * @return {number}\n */\n\n/**\n * @typedef ItemSize\n * @type {number | number[] | ItemSizeGetter}\n */\n\n/**\n * @typedef SizeAndPosition\n * @type {object}\n * @property {number} size\n * @property {number} offset\n */\n\n/**\n * @typedef SizeAndPositionData\n * @type {Object.<number, SizeAndPosition>}\n */\n\n/**\n * @typedef Options\n * @type {object}\n * @property {number} itemCount\n * @property {ItemSize} itemSize\n * @property {number} estimatedItemSize\n */\n\nexport default class SizeAndPositionManager {\n\n\t/**\n\t * @param {Options} options\n\t */\n\tconstructor({ itemSize, itemCount, estimatedItemSize }) {\n\t\t/**\n\t\t * @private\n\t\t * @type {ItemSize}\n\t\t */\n\t\tthis.itemSize = itemSize;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t */\n\t\tthis.itemCount = itemCount;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t */\n\t\tthis.estimatedItemSize = estimatedItemSize;\n\n\t\t/**\n\t\t * Cache of size and position data for items, mapped by item index.\n\t\t *\n\t\t * @private\n\t\t * @type {SizeAndPositionData}\n\t\t */\n\t\tthis.itemSizeAndPositionData = {};\n\n\t\t/**\n\t\t * Measurements for items up to this index can be trusted; items afterward should be estimated.\n\t\t *\n\t\t * @private\n\t\t * @type {number}\n\t\t */\n\t\tthis.lastMeasuredIndex = -1;\n\n\t\tthis.checkForMismatchItemSizeAndItemCount();\n\n\t\tif (!this.justInTime) this.computeTotalSizeAndPositionData();\n\t}\n\n\tget justInTime() {\n\t\treturn typeof this.itemSize === 'function';\n\t}\n\n\t/**\n\t * @param {Options} options\n\t */\n\tupdateConfig({ itemSize, itemCount, estimatedItemSize }) {\n\t\tif (itemCount != null) {\n\t\t\tthis.itemCount = itemCount;\n\t\t}\n\n\t\tif (estimatedItemSize != null) {\n\t\t\tthis.estimatedItemSize = estimatedItemSize;\n\t\t}\n\n\t\tif (itemSize != null) {\n\t\t\tthis.itemSize = itemSize;\n\t\t}\n\n\t\tthis.checkForMismatchItemSizeAndItemCount();\n\n\t\tif (this.justInTime && this.totalSize != null) {\n\t\t\tthis.totalSize = undefined;\n\t\t} else {\n\t\t\tthis.computeTotalSizeAndPositionData();\n\t\t}\n\t}\n\n\tcheckForMismatchItemSizeAndItemCount() {\n\t\tif (Array.isArray(this.itemSize) && this.itemSize.length < this.itemCount) {\n\t\t\tthrow Error(\n\t\t\t\t`When itemSize is an array, itemSize.length can't be smaller than itemCount`,\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} index\n\t */\n\tgetSize(index) {\n\t\tconst { itemSize } = this;\n\n\t\tif (typeof itemSize === 'function') {\n\t\t\treturn itemSize(index);\n\t\t}\n\n\t\treturn Array.isArray(itemSize) ? itemSize[index] : itemSize;\n\t}\n\n\t/**\n\t * Compute the totalSize and itemSizeAndPositionData at the start,\n\t * only when itemSize is a number or an array.\n\t */\n\tcomputeTotalSizeAndPositionData() {\n\t\tlet totalSize = 0;\n\t\tfor (let i = 0; i < this.itemCount; i++) {\n\t\t\tconst size = this.getSize(i);\n\t\t\tconst offset = totalSize;\n\t\t\ttotalSize += size;\n\n\t\t\tthis.itemSizeAndPositionData[i] = {\n\t\t\t\toffset,\n\t\t\t\tsize,\n\t\t\t};\n\t\t}\n\n\t\tthis.totalSize = totalSize;\n\t}\n\n\tgetLastMeasuredIndex() {\n\t\treturn this.lastMeasuredIndex;\n\t}\n\n\n\t/**\n\t * This method returns the size and position for the item at the specified index.\n\t *\n\t * @param {number} index\n\t */\n\tgetSizeAndPositionForIndex(index) {\n\t\tif (index < 0 || index >= this.itemCount) {\n\t\t\tthrow Error(\n\t\t\t\t`Requested index ${index} is outside of range 0..${this.itemCount}`,\n\t\t\t);\n\t\t}\n\n\t\treturn this.justInTime\n\t\t\t? this.getJustInTimeSizeAndPositionForIndex(index)\n\t\t\t: this.itemSizeAndPositionData[index];\n\t}\n\n\t/**\n\t * This is used when itemSize is a function.\n\t * just-in-time calculates (or used cached values) for items leading up to the index.\n\t *\n\t * @param {number} index\n\t */\n\tgetJustInTimeSizeAndPositionForIndex(index) {\n\t\tif (index > this.lastMeasuredIndex) {\n\t\t\tconst lastMeasuredSizeAndPosition = this.getSizeAndPositionOfLastMeasuredItem();\n\t\t\tlet offset =\n\t\t\t\t    lastMeasuredSizeAndPosition.offset + lastMeasuredSizeAndPosition.size;\n\n\t\t\tfor (let i = this.lastMeasuredIndex + 1; i <= index; i++) {\n\t\t\t\tconst size = this.getSize(i);\n\n\t\t\t\tif (size == null || isNaN(size)) {\n\t\t\t\t\tthrow Error(`Invalid size returned for index ${i} of value ${size}`);\n\t\t\t\t}\n\n\t\t\t\tthis.itemSizeAndPositionData[i] = {\n\t\t\t\t\toffset,\n\t\t\t\t\tsize,\n\t\t\t\t};\n\n\t\t\t\toffset += size;\n\t\t\t}\n\n\t\t\tthis.lastMeasuredIndex = index;\n\t\t}\n\n\t\treturn this.itemSizeAndPositionData[index];\n\t}\n\n\tgetSizeAndPositionOfLastMeasuredItem() {\n\t\treturn this.lastMeasuredIndex >= 0\n\t\t\t? this.itemSizeAndPositionData[this.lastMeasuredIndex]\n\t\t\t: { offset: 0, size: 0 };\n\t}\n\n\t/**\n\t * Total size of all items being measured.\n\t *\n\t * @return {number}\n\t */\n\tgetTotalSize() {\n\t\t// Return the pre computed totalSize when itemSize is number or array.\n\t\tif (this.totalSize) return this.totalSize;\n\n\t\t/**\n\t\t * When itemSize is a function,\n\t\t * This value will be completedly estimated initially.\n\t\t * As items as measured the estimate will be updated.\n\t\t */\n\t\tconst lastMeasuredSizeAndPosition = this.getSizeAndPositionOfLastMeasuredItem();\n\n\t\treturn (\n\t\t\tlastMeasuredSizeAndPosition.offset +\n\t\t\tlastMeasuredSizeAndPosition.size +\n\t\t\t(this.itemCount - this.lastMeasuredIndex - 1) * this.estimatedItemSize\n\t\t);\n\t}\n\n\t/**\n\t * Determines a new offset that ensures a certain item is visible, given the alignment.\n\t *\n\t * @param {'auto' | 'start' | 'center' | 'end'} align Desired alignment within container\n\t * @param {number | undefined} containerSize Size (width or height) of the container viewport\n\t * @param {number | undefined} currentOffset\n\t * @param {number | undefined} targetIndex\n\t * @return {number} Offset to use to ensure the specified item is visible\n\t */\n\tgetUpdatedOffsetForIndex({ align = ALIGNMENT.START, containerSize, currentOffset, targetIndex }) {\n\t\tif (containerSize <= 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst datum = this.getSizeAndPositionForIndex(targetIndex);\n\t\tconst maxOffset = datum.offset;\n\t\tconst minOffset = maxOffset - containerSize + datum.size;\n\n\t\tlet idealOffset;\n\n\t\tswitch (align) {\n\t\t\tcase ALIGNMENT.END:\n\t\t\t\tidealOffset = minOffset;\n\t\t\t\tbreak;\n\t\t\tcase ALIGNMENT.CENTER:\n\t\t\t\tidealOffset = maxOffset - (containerSize - datum.size) / 2;\n\t\t\t\tbreak;\n\t\t\tcase ALIGNMENT.START:\n\t\t\t\tidealOffset = maxOffset;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tidealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n\t\t}\n\n\t\tconst totalSize = this.getTotalSize();\n\n\t\treturn Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n\t}\n\n\t/**\n\t * @param {number} containerSize\n\t * @param {number} offset\n\t * @param {number} overscanCount\n\t * @return {{stop: number|undefined, start: number|undefined}}\n\t */\n\tgetVisibleRange({ containerSize = 0, offset, overscanCount }) {\n\t\tconst totalSize = this.getTotalSize();\n\n\t\tif (totalSize === 0) {\n\t\t\treturn {};\n\t\t}\n\n\t\tconst maxOffset = offset + containerSize;\n\t\tlet start = this.findNearestItem(offset);\n\n\t\tif (start === undefined) {\n\t\t\tthrow Error(`Invalid offset ${offset} specified`);\n\t\t}\n\n\t\tconst datum = this.getSizeAndPositionForIndex(start);\n\t\toffset = datum.offset + datum.size;\n\n\t\tlet stop = start;\n\n\t\twhile (offset < maxOffset && stop < this.itemCount - 1) {\n\t\t\tstop++;\n\t\t\toffset += this.getSizeAndPositionForIndex(stop).size;\n\t\t}\n\n\t\tif (overscanCount) {\n\t\t\tstart = Math.max(0, start - overscanCount);\n\t\t\tstop = Math.min(stop + overscanCount, this.itemCount - 1);\n\t\t}\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tstop,\n\t\t};\n\t}\n\n\t/**\n\t * Clear all cached values for items after the specified index.\n\t * This method should be called for any item that has changed its size.\n\t * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionForIndex() is called.\n\t *\n\t * @param {number} index\n\t */\n\tresetItem(index) {\n\t\tthis.lastMeasuredIndex = Math.min(this.lastMeasuredIndex, index - 1);\n\t}\n\n\t/**\n\t * Searches for the item (index) nearest the specified offset.\n\t *\n\t * If no exact match is found the next lowest item index will be returned.\n\t * This allows partially visible items (with offsets just before/above the fold) to be visible.\n\t *\n\t * @param {number} offset\n\t */\n\tfindNearestItem(offset) {\n\t\tif (isNaN(offset)) {\n\t\t\tthrow Error(`Invalid offset ${offset} specified`);\n\t\t}\n\n\t\t// Our search algorithms find the nearest match at or below the specified offset.\n\t\t// So make sure the offset is at least 0 or no match will be found.\n\t\toffset = Math.max(0, offset);\n\n\t\tconst lastMeasuredSizeAndPosition = this.getSizeAndPositionOfLastMeasuredItem();\n\t\tconst lastMeasuredIndex = Math.max(0, this.lastMeasuredIndex);\n\n\t\tif (lastMeasuredSizeAndPosition.offset >= offset) {\n\t\t\t// If we've already measured items within this range just use a binary search as it's faster.\n\t\t\treturn this.binarySearch({\n\t\t\t\thigh: lastMeasuredIndex,\n\t\t\t\tlow:  0,\n\t\t\t\toffset,\n\t\t\t});\n\t\t} else {\n\t\t\t// If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n\t\t\t// The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n\t\t\t// The overall complexity for this approach is O(log n).\n\t\t\treturn this.exponentialSearch({\n\t\t\t\tindex: lastMeasuredIndex,\n\t\t\t\toffset,\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {number} low\n\t * @param {number} high\n\t * @param {number} offset\n\t */\n\tbinarySearch({ low, high, offset }) {\n\t\tlet middle = 0;\n\t\tlet currentOffset = 0;\n\n\t\twhile (low <= high) {\n\t\t\tmiddle = low + Math.floor((high - low) / 2);\n\t\t\tcurrentOffset = this.getSizeAndPositionForIndex(middle).offset;\n\n\t\t\tif (currentOffset === offset) {\n\t\t\t\treturn middle;\n\t\t\t} else if (currentOffset < offset) {\n\t\t\t\tlow = middle + 1;\n\t\t\t} else if (currentOffset > offset) {\n\t\t\t\thigh = middle - 1;\n\t\t\t}\n\t\t}\n\n\t\tif (low > 0) {\n\t\t\treturn low - 1;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @private\n\t * @param {number} index\n\t * @param {number} offset\n\t */\n\texponentialSearch({ index, offset }) {\n\t\tlet interval = 1;\n\n\t\twhile (\n\t\t\tindex < this.itemCount &&\n\t\t\tthis.getSizeAndPositionForIndex(index).offset < offset\n\t\t\t) {\n\t\t\tindex += interval;\n\t\t\tinterval *= 2;\n\t\t}\n\n\t\treturn this.binarySearch({\n\t\t\thigh: Math.min(index, this.itemCount - 1),\n\t\t\tlow:  Math.floor(index / 2),\n\t\t\toffset,\n\t\t});\n\t}\n}","<script context=\"module\">\n\t/**\n\t * the third argument for event bundler\n\t * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n\t */\n\tconst thirdEventArg = (() => {\n\t\tlet result = false;\n\n\t\ttry {\n\t\t\tconst arg = Object.defineProperty({}, 'passive', {\n\t\t\t\tget() {\n\t\t\t\t\tresult = { passive: true };\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t});\n\n\t\t\twindow.addEventListener('testpassive', arg, arg);\n\t\t\twindow.remove('testpassive', arg, arg);\n\t\t} catch (e) { /* */\n\t\t}\n\n\t\treturn result;\n\t})();\n</script>\n\n<script>\n\timport { onMount, onDestroy, createEventDispatcher } from 'svelte';\n\timport SizeAndPositionManager from './SizeAndPositionManager';\n\timport {\n\t\tDIRECTION,\n\t\tSCROLL_CHANGE_REASON,\n\t\tSCROLL_PROP,\n\t} from './constants';\n\n\texport let height;\n\texport let width = '100%';\n\n\texport let itemCount;\n\texport let itemSize;\n\texport let estimatedItemSize = null;\n\texport let stickyIndices = null;\n\n\texport let scrollDirection = DIRECTION.VERTICAL;\n\texport let scrollOffset = null;\n\texport let scrollToIndex = null;\n\texport let scrollToAlignment = null;\n\n\texport let overscanCount = 3;\n\n\tconst dispatchEvent = createEventDispatcher();\n\n\tconst sizeAndPositionManager = new SizeAndPositionManager({\n\t\titemCount,\n\t\titemSize,\n\t\testimatedItemSize: getEstimatedItemSize(),\n\t});\n\n\tlet mounted = false;\n\tlet wrapper;\n\tlet items = [];\n\n\tlet state = {\n\t\toffset:             scrollOffset || (scrollToIndex != null && items.length && getOffsetForIndex(scrollToIndex)) || 0,\n\t\tscrollChangeReason: SCROLL_CHANGE_REASON.REQUESTED,\n\t};\n\n\tlet prevState = state;\n\tlet prevProps = {\n\t\tscrollToIndex,\n\t\tscrollToAlignment,\n\t\tscrollOffset,\n\t\titemCount,\n\t\titemSize,\n\t\testimatedItemSize,\n\t};\n\n\tlet styleCache = {};\n\tlet wrapperStyle = '';\n\tlet innerStyle = '';\n\n\t$: propsUpdated(\n\t\tscrollToIndex,\n\t\tscrollToAlignment,\n\t\tscrollOffset,\n\t\titemCount,\n\t\titemSize,\n\t\testimatedItemSize,\n\t);\n\t$: stateUpdated(state);\n\t$: if (mounted) recomputeSizes(height, width, stickyIndices); // call scroll.reset;\n\n\trefresh(); // Initial Load\n\n\tonMount(() => {\n\t\tmounted = true;\n\n\t\twrapper.addEventListener('scroll', handleScroll, thirdEventArg);\n\n\t\tif (scrollOffset != null) {\n\t\t\tscrollTo(scrollOffset);\n\t\t} else if (scrollToIndex != null) {\n\t\t\tscrollTo(getOffsetForIndex(scrollToIndex));\n\t\t}\n\t});\n\n\tonDestroy(() => {\n\t\tif (mounted) wrapper.removeEventListener('scroll', handleScroll);\n\t});\n\n\n\tfunction propsUpdated() {\n\t\tif (!mounted) return;\n\n\t\tconst scrollPropsHaveChanged =\n\t\t\t      prevProps.scrollToIndex !== scrollToIndex ||\n\t\t\t      prevProps.scrollToAlignment !== scrollToAlignment;\n\t\tconst itemPropsHaveChanged =\n\t\t\t      prevProps.itemCount !== itemCount ||\n\t\t\t      prevProps.itemSize !== itemSize ||\n\t\t\t      prevProps.estimatedItemSize !== estimatedItemSize;\n\n\t\tif (itemPropsHaveChanged) {\n\t\t\tsizeAndPositionManager.updateConfig({\n\t\t\t\titemSize,\n\t\t\t\titemCount,\n\t\t\t\testimatedItemSize: getEstimatedItemSize(),\n\t\t\t});\n\n\t\t\trecomputeSizes();\n\t\t}\n\n\t\tif (prevProps.scrollOffset !== scrollOffset) {\n\t\t\tstate = {\n\t\t\t\toffset:             scrollOffset || 0,\n\t\t\t\tscrollChangeReason: SCROLL_CHANGE_REASON.REQUESTED,\n\t\t\t};\n\t\t} else if (\n\t\t\ttypeof scrollToIndex === 'number' &&\n\t\t\t(scrollPropsHaveChanged || itemPropsHaveChanged)\n\t\t) {\n\t\t\tstate = {\n\t\t\t\toffset: getOffsetForIndex(\n\t\t\t\t\tscrollToIndex,\n\t\t\t\t\tscrollToAlignment,\n\t\t\t\t\titemCount,\n\t\t\t\t),\n\n\t\t\t\tscrollChangeReason: SCROLL_CHANGE_REASON.REQUESTED,\n\t\t\t};\n\t\t}\n\n\t\tprevProps = {\n\t\t\tscrollToIndex,\n\t\t\tscrollToAlignment,\n\t\t\tscrollOffset,\n\t\t\titemCount,\n\t\t\titemSize,\n\t\t\testimatedItemSize,\n\t\t};\n\t}\n\n\tfunction stateUpdated() {\n\t\tif (!mounted) return;\n\n\t\tconst { offset, scrollChangeReason } = state;\n\n\t\tif (\n\t\t\tprevState.offset !== offset ||\n\t\t\tprevState.scrollChangeReason !== scrollChangeReason\n\t\t) {\n\t\t\trefresh();\n\t\t}\n\n\t\tif (prevState.offset !== offset && scrollChangeReason === SCROLL_CHANGE_REASON.REQUESTED) {\n\t\t\tscrollTo(offset);\n\t\t}\n\n\t\tprevState = state;\n\t}\n\n\tfunction refresh() {\n\t\tconst { offset } = state;\n\t\tconst { start, stop } = sizeAndPositionManager.getVisibleRange({\n\t\t\tcontainerSize: scrollDirection === DIRECTION.VERTICAL ? height : width,\n\t\t\toffset,\n\t\t\toverscanCount,\n\t\t});\n\n\t\tlet updatedItems = [];\n\n\t\tconst totalSize = sizeAndPositionManager.getTotalSize();\n\t\tif (scrollDirection === DIRECTION.VERTICAL) {\n\t\t\twrapperStyle = `height:${height}px;width:${width};`;\n\t\t\tinnerStyle = `flex-direction:column;height:${totalSize}px;`;\n\t\t} else {\n\t\t\twrapperStyle = `height:${height};width:${width}px`;\n\t\t\tinnerStyle = `width:${totalSize}px;`;\n\t\t}\n\n\t\tconst hasStickyIndices = stickyIndices != null && stickyIndices.length !== 0;\n\t\tif (hasStickyIndices) {\n\t\t\tfor (let i = 0; i < stickyIndices.length; i++) {\n\t\t\t\tconst index = stickyIndices[i];\n\t\t\t\tupdatedItems.push({\n\t\t\t\t\tindex,\n\t\t\t\t\tstyle: getStyle(index, true),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (start !== undefined && stop !== undefined) {\n\t\t\tfor (let index = start; index <= stop; index++) {\n\t\t\t\tif (hasStickyIndices && stickyIndices.includes(index)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tupdatedItems.push({\n\t\t\t\t\tindex,\n\t\t\t\t\tstyle: getStyle(index, false),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tdispatchEvent('itemsUpdated', {\n\t\t\t\tstartIndex: start,\n\t\t\t\tstopIndex:  stop,\n\t\t\t});\n\t\t}\n\n\t\titems = updatedItems;\n\t}\n\n\n\tfunction scrollTo(value) {\n\t\twrapper[SCROLL_PROP[scrollDirection]] = value;\n\t}\n\n\texport function recomputeSizes(startIndex = 0) {\n\t\tstyleCache = {};\n\t\tsizeAndPositionManager.resetItem(startIndex);\n\t\trefresh();\n\t}\n\n\tfunction getOffsetForIndex(index, align = scrollToAlignment, _itemCount = itemCount) {\n\t\tif (index < 0 || index >= _itemCount) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn sizeAndPositionManager.getUpdatedOffsetForIndex({\n\t\t\talign,\n\t\t\tcontainerSize: scrollDirection === DIRECTION.VERTICAL ? height : width,\n\t\t\tcurrentOffset: state.offset || 0,\n\t\t\ttargetIndex:   index,\n\t\t});\n\t}\n\n\tfunction handleScroll(event) {\n\t\tconst offset = getWrapperOffset();\n\n\t\tif (offset < 0 || state.offset === offset || event.target !== wrapper) return;\n\n\t\tstate = {\n\t\t\toffset,\n\t\t\tscrollChangeReason: SCROLL_CHANGE_REASON.OBSERVED,\n\t\t};\n\n\t\tdispatchEvent('afterScroll', {\n\t\t\toffset,\n\t\t\tevent,\n\t\t});\n\t}\n\n\tfunction getWrapperOffset() {\n\t\treturn wrapper[SCROLL_PROP[scrollDirection]];\n\t}\n\n\tfunction getEstimatedItemSize() {\n\t\treturn (\n\t\t\testimatedItemSize ||\n\t\t\t(typeof itemSize === 'number' && itemSize) ||\n\t\t\t50\n\t\t);\n\t}\n\n\tfunction getStyle(index, sticky) {\n\t\tif (styleCache[index]) return styleCache[index];\n\n\t\tconst { size, offset } = sizeAndPositionManager.getSizeAndPositionForIndex(index);\n\n\t\tlet style;\n\n\t\tif (scrollDirection === DIRECTION.VERTICAL) {\n\t\t\tstyle = `left:0;width:100%;height:${size}px;`;\n\n\t\t\tif (sticky) {\n\t\t\t\tstyle += `position:sticky;flex-grow:0;z-index:1;top:0;margin-top:${offset}px;margin-bottom:${-(offset + size)}px;`;\n\t\t\t} else {\n\t\t\t\tstyle += `position:absolute;top:${offset}px;`;\n\t\t\t}\n\t\t} else {\n\t\t\tstyle = `top:0;width:${size}px;`;\n\n\t\t\tif (sticky) {\n\t\t\t\tstyle += `position:sticky;z-index:1;left:0;margin-left:${offset}px;margin-right:${-(offset + size)}px;`;\n\t\t\t} else {\n\t\t\t\tstyle += `position:absolute;height:100%;left:${offset}px;`;\n\t\t\t}\n\t\t}\n\n\t\treturn styleCache[index] = style;\n\t}\n</script>\n\n<div bind:this={wrapper} class=\"virtual-list-wrapper\" style={wrapperStyle}>\n\t<slot name=\"header\" />\n\n\t<div class=\"virtual-list-inner\" style={innerStyle}>\n\t\t{#each items as item (item.index)}\n\t\t\t<slot name=\"item\" style={item.style} index={item.index} />\n\t\t{/each}\n\t</div>\n\n\t<slot name=\"footer\" />\n</div>\n\n<style>\n\t.virtual-list-wrapper {\n\t\toverflow:                   auto;\n\t\twill-change:                transform;\n\t\t-webkit-overflow-scrolling: touch;\n\t}\n\n\t.virtual-list-inner {\n\t\tposition:   relative;\n\t\tdisplay:    flex;\n\t\twidth:      100%;\n\t\tmin-height: 100%;\n\t}\n</style>","<script>\r\n  import { createEventDispatcher, onDestroy, onMount, tick } from 'svelte';\r\n  import VirtualList from 'svelte-tiny-virtual-list';\r\n  import { isOutOfViewport} from './../lib/utils.js';\r\n  import Item from './Item.svelte';\r\n\r\n  export let creatable;\r\n  export let maxReached = false;\r\n  export let dropdownIndex = 0;\r\n  export let renderer;\r\n  export let items= [];\r\n  export let alreadyCreated;\r\n  export let virtualList;\r\n  export let vlItemSize;\r\n  export let vlHeight;\r\n  /** internal props */\r\n  export let inputValue;\r\n  export let listIndex;\r\n  export let hasDropdownOpened;\r\n  export let listMessage;\r\n\r\n  export function scrollIntoView(params) {\r\n    if (virtualList) return;\r\n    const focusedEl = container.querySelector(`[data-pos=\"${dropdownIndex}\"]`);\r\n    if (!focusedEl) return;\r\n    const focusedRect = focusedEl.getBoundingClientRect();\r\n    const menuRect = scrollContainer.getBoundingClientRect();\r\n    const overScroll = focusedEl.offsetHeight / 3;\r\n    switch (true) {\r\n      case focusedEl.offsetTop < scrollContainer.scrollTop:\r\n        scrollContainer.scrollTop = focusedEl.offsetTop - overScroll;\r\n        break;\r\n      case focusedEl.offsetTop  + focusedRect.height > scrollContainer.scrollTop + menuRect.height:\r\n        scrollContainer.scrollTop = focusedEl.offsetTop  + focusedRect.height - scrollContainer.offsetHeight + overScroll;\r\n        break;\r\n    }\r\n  }\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  let container;\r\n  let scrollContainer;\r\n  let isMounted = false;\r\n  let hasEmptyList = false;\r\n  $: currentListLength = items.length; \r\n\r\n  let vl_height = vlHeight;\r\n  let vl_itemSize = vlItemSize;\r\n  $: vl_listHeight = Math.min(vl_height, Array.isArray(vl_itemSize) \r\n    ? vl_itemSize.reduce((res, num) => {\r\n      res+= num;\r\n      return res;\r\n    }, 0)\r\n    : items.length * vl_itemSize\r\n  );\r\n  let vl_autoMode = vlHeight === null && vlItemSize === null;\r\n  let refVirtualList;\r\n\r\n  $: {\r\n    hasEmptyList = items.length < 1 && (creatable \r\n      ? !$inputValue\r\n      : true\r\n    );\r\n    // required when changing item list 'on-the-fly' for VL\r\n    if (virtualList && isMounted && vl_autoMode) {\r\n      if (hasEmptyList) dropdownIndex = null;\r\n      vl_itemSize = 0;\r\n      tick().then(virtualListDimensionsResolver);\r\n    }\r\n  }\r\n\r\n  function positionDropdown(val) {\r\n    if (!scrollContainer) return;\r\n    const outVp = isOutOfViewport(scrollContainer);\r\n    if (outVp.bottom && !outVp.top) {\r\n      scrollContainer.style.bottom = (scrollContainer.parentElement.clientHeight + 1) + 'px';\r\n      // FUTURE: debounce ....\r\n    } else if (!val || outVp.top) {\r\n      scrollContainer.style.bottom = '';\r\n    }\r\n  }\r\n\r\n  function virtualListDimensionsResolver() {\r\n    if (!refVirtualList) return;\r\n    const pixelGetter = (el, prop) => {\r\n      const styles = window.getComputedStyle(el);\r\n      let { groups: { value, unit } } = styles[prop].match(/(?<value>\\d+)(?<unit>[a-zA-Z]+)/);\r\n      value = parseFloat(value);\r\n      if (unit !== 'px') {\r\n        const el = unit === 'rem'\r\n          ? document.documentElement\r\n          : scrollContainer.parentElement;\r\n        const multipler = parseFloat(window.getComputedStyle(el).fontSize.match(/\\d+/).shift());\r\n        value = multipler * value; \r\n      }\r\n      return value;\r\n    }\r\n    vl_height = pixelGetter(scrollContainer, 'maxHeight')\r\n      - pixelGetter(scrollContainer, 'paddingTop')\r\n      - pixelGetter(scrollContainer, 'paddingBottom');\r\n    // get item size (hacky style)\r\n    scrollContainer.style = 'opacity: 0; display: block';\r\n    const firstItem = refVirtualList.$$.ctx[0].firstElementChild.firstElementChild;\r\n    if (firstItem) {\r\n\r\n      firstItem.style = '';\r\n      const firstSize = firstItem.getBoundingClientRect().height;\r\n      const secondItem = refVirtualList.$$.ctx[0].firstElementChild.firstElementChild.nextElementSibling;\r\n      let secondSize;\r\n      if (secondItem) {\r\n        secondItem.style = '';\r\n        secondSize = secondItem.getBoundingClientRect().height;\r\n      }\r\n      if (firstSize !== secondSize) {\r\n        const groupHeaderSize = items[0].$isGroupHeader ? firstSize : secondSize;\r\n        const regularItemSize = items[0].$isGroupHeader ? secondSize : firstSize;\r\n        vl_itemSize = items.map(opt => opt.$isGroupHeader ? groupHeaderSize : regularItemSize);\r\n      } else {\r\n        vl_itemSize = firstSize;\r\n      }\r\n    }\r\n    scrollContainer.style = '';\r\n  }\r\n\r\n  let dropdownStateSubscription = () => {};\r\n  /** ************************************ lifecycle */\r\n  onMount(() => {\r\n    /** ************************************ flawless UX related tweak */\r\n    dropdownStateSubscription = hasDropdownOpened.subscribe(val => {\r\n      tick().then(() => positionDropdown(val));\r\n      // bind/unbind scroll listener\r\n      document[val ? 'addEventListener' : 'removeEventListener']('scroll', () => positionDropdown(val), { passive: true });\r\n    });\r\n    isMounted = true;\r\n  });\r\n  onDestroy(() => dropdownStateSubscription());\r\n</script>\r\n\r\n<div class=\"sv-dropdown\" class:is-virtual={virtualList} aria-expanded={$hasDropdownOpened} tabindex=\"-1\" \r\n  bind:this={scrollContainer}\r\n  on:mousedown|preventDefault\r\n>\r\n  <div class=\"sv-dropdown-content\" bind:this={container} class:max-reached={maxReached}>\r\n  {#if items.length}\r\n    {#if virtualList}\r\n      <VirtualList bind:this={refVirtualList}\r\n        width=\"100%\"\r\n        height={vl_listHeight}\r\n        itemCount={items.length}\r\n        itemSize={vl_itemSize}\r\n        scrollToAlignment=\"auto\"\r\n        scrollToIndex={items.length && isMounted ? dropdownIndex :  null}\r\n      >\r\n        <div slot=\"item\" let:index let:style {style} class:sv-dd-item-active={index == dropdownIndex}>\r\n          <Item formatter={renderer}\r\n            index={listIndex.map[index]}\r\n            isDisabled={items[index].isDisabled}\r\n            item={items[index]}\r\n            inputValue={$inputValue}\r\n            on:hover\r\n            on:select>\r\n          </Item>\r\n        </div>\r\n      </VirtualList>\r\n    {:else}\r\n      {#each items as opt, i}\r\n        <div data-pos={listIndex.map[i]} class:sv-dd-item-active={listIndex.map[i] == dropdownIndex}>\r\n          <Item formatter={renderer}\r\n            index={listIndex.map[i]}\r\n            isDisabled={opt.isDisabled}\r\n            item={opt}\r\n            inputValue={$inputValue}\r\n            on:hover\r\n            on:select>\r\n          </Item>\r\n        </div>\r\n      {/each}\r\n    {/if}\r\n  {/if}\r\n  {#if $inputValue && creatable && !maxReached}\r\n    <div class=\"creatable-row\" on:click={dispatch('select', $inputValue)}\r\n      class:active={currentListLength === dropdownIndex}\r\n      class:is-disabled={alreadyCreated.includes($inputValue)}\r\n    >\r\n      <span>Create '{$inputValue}'</span>\r\n      {#if currentListLength !== dropdownIndex}\r\n      <span class=\"shortcut\"><kbd>Ctrl</kbd>+<kbd>Enter</kbd></span>\r\n      {/if}\r\n    </div>\r\n  {/if}\r\n  {#if hasEmptyList || maxReached}\r\n    <div class=\"empty-list-row\">{listMessage}</div>\r\n  {/if}\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n.sv-dropdown {\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  background-color: white;\r\n  width: 100%;\r\n  min-height: 40px;\r\n  padding: 4px;\r\n  display: none;\r\n  max-height: 250px;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  border: 1px solid rgba(0,0,0,0.15);\r\n  border-radius: .25rem;\r\n  box-shadow: 0 6px 12px rgba(0,0,0,0.175);\r\n  z-index: 2;\r\n}\r\n.sv-dropdown.is-virtual {\r\n  overflow-y: hidden;\r\n}\r\n.sv-dropdown[aria-expanded=\"true\"] { display: block; }\r\n.sv-dropdown-content.max-reached { opacity: 0.75; cursor: not-allowed; }\r\n\r\n.creatable-row {\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 2px;\r\n  padding: 3px 3px 3px 6px;\r\n}\r\n.creatable-row:hover,\r\n.creatable-row:active,\r\n.creatable-row.active {\r\n    background-color: #F2F5F8;\r\n}\r\n.creatable-row.active.is-disabled {\r\n  opacity: 0.5;\r\n  background-color: rgb(252, 186, 186);\r\n}\r\n.creatable-row.is-disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.shortcut {\r\n  display: flex;\r\n  align-items: center;\r\n  align-content: center;\r\n}\r\n.shortcut > kbd {\r\n    border: 1px solid #efefef;\r\n    border-radius: 4px;\r\n    padding: 0px 6px;\r\n    margin: -1px 0;\r\n    background-color: white;\r\n}\r\n\r\n.empty-list-row {\r\n  min-width: 0px;\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  overflow: hidden;\r\n  padding: 3px 3px 3px 6px;\r\n  text-align: left;\r\n}\r\n</style>","<script context=\"module\">\r\n  import defaults from './settings.js';\r\n  import { debounce, xhr, fieldInit } from './lib/utils.js'; // shared across instances\r\n\r\n  const formatterList = {\r\n    default: function(item) { return item[this.label]; }\r\n  };\r\n  // provide ability to add additional renderers\r\n  export function addFormatter(name, formatFn) {\r\n    if (name instanceof Object) {\r\n      formatterList = Object.assign(formatterList, name);\r\n    } else {\r\n      formatterList[name] = formatFn\r\n    }\r\n  };\r\n  export const config = defaults;\r\n</script>\r\n\r\n<script>\r\n  import { createEventDispatcher, tick, onMount } from 'svelte';\r\n  import { writable } from 'svelte/store';\r\n  import { fetchRemote } from './lib/utils.js';\r\n  import { flatList, filterList, indexList } from './lib/list.js';\r\n  import Control from './components/Control.svelte';\r\n  import Dropdown from './components/Dropdown.svelte';\r\n\r\n  // basic\r\n  export let options = [];\r\n  export let valueField = defaults.valueField;\r\n  export let labelField = defaults.labelField;\r\n  export let placeholder = 'Select';\r\n  export let searchable = defaults.searchable;\r\n  export let disabled = defaults.disabled;\r\n  // UI, UX\r\n  export let renderer = null;\r\n  export let clearable = defaults.clearable;\r\n  export let selectOnTab = defaults.selectOnTab;\r\n  // multiple\r\n  export let multiple = defaults.multiple;\r\n  export let max = defaults.max;\r\n  export let collapseSelection = defaults.collapseSelection;\r\n  // form and CE\r\n  export let name = null;\r\n  export let required = false;\r\n  export let anchor = null;\r\n  // creating \r\n  export let creatable = defaults.creatable;\r\n  export let creatablePrefix = defaults.creatablePrefix;\r\n  export let delimiter = defaults.delimiter;\r\n  // remote\r\n  export let fetch = null;\r\n  export let fetchMode = 'auto';\r\n  export let fetchCallback = null;\r\n  // virtual list\r\n  export let virtualList = defaults.virtualList;\r\n  export let vlHeight = defaults.vlHeight;\r\n  export let vlItemSize = defaults.vlItemSize;\r\n  // sifter related\r\n  export let searchField = null;\r\n  export let sortField = null;\r\n  // styling\r\n  let className = 'svelecte-control';\r\n  export { className as class};\r\n  export let style = null;\r\n  // API: public\r\n  export let selection = null;\r\n  export let value = null;\r\n  export let labelAsValue = false;\r\n  export const focus = event => {\r\n    refControl.focusControl(event);\r\n  };\r\n  export const getSelection = onlyValues => {\r\n    if (!selection) return multiple ? [] : null;\r\n    return multiple \r\n      ? selection.map(opt => onlyValues ? opt[currentValueField] : Object.assign({}, opt))\r\n      : (onlyValues ? selection[currentValueField] : Object.assign({}, selection));\r\n  };\r\n  export const setSelection = selection => _selectByValues(selection);\r\n  // API: internal for CE\r\n  export const clearByParent = doDisable => { \r\n    clearSelection();\r\n    emitChangeEvent();\r\n    if (doDisable) disabled = true;\r\n    fetch = null;\r\n  }\r\n \r\n  const dispatch = createEventDispatcher();\r\n\r\n  const itemConfig = {\r\n    optionsWithGroups: false,\r\n    isOptionArray: options && options.length && typeof options[0] !== 'object',\r\n    optionProps: [],\r\n    valueField: valueField,\r\n    labelField: labelField,\r\n    labelAsValue: labelAsValue,\r\n  };\r\n\r\n  let isInitialized = false;\r\n  let initialValue = value;\r\n  let refDropdown;\r\n  let refControl;\r\n  let ignoreHover = false;\r\n  let dropdownActiveIndex = null;\r\n  let fetchUnsubscribe = null;\r\n  let currentValueField = valueField || fieldInit('value', options, itemConfig);\r\n  let currentLabelField = labelField || fieldInit('label', options, itemConfig);\r\n\r\n\r\n  itemConfig.valueField = currentValueField;\r\n  itemConfig.labelField = currentLabelField;\r\n  itemConfig.optionProps = [currentValueField, currentLabelField];\r\n  \r\n  /** ************************************ automatic init */\r\n  multiple = name && !multiple ? name.endsWith('[]') : multiple;\r\n\r\n  /** ************************************ Context definition */\r\n  const inputValue = writable('');\r\n  const hasFocus = writable(false);\r\n  const hasDropdownOpened = writable(false);\r\n\r\n  let isFetchingData = false;\r\n  \r\n  /** ************************************ remote source */\r\n  // $: initFetchOnly = fetchMode === 'init' || (typeof fetch === 'string' && fetch.indexOf('[query]') === -1);\r\n  $: createFetch(fetch);\r\n\r\n  function createFetch(fetch) {\r\n    if (fetchUnsubscribe) {\r\n      fetchUnsubscribe();\r\n      fetchUnsubscribe = null;\r\n    } \r\n    if (!fetch) return null;\r\n\r\n    const fetchSource = typeof fetch === 'string' ? fetchRemote(fetch) : fetch;\r\n    const initFetchOnly = fetchMode === 'init' || (fetchMode === 'auto' && typeof fetch === 'string' && fetch.indexOf('[query]') === -1);\r\n    const debouncedFetch = debounce(query => {\r\n      fetchSource(query, fetchCallback)\r\n        .then(data => {\r\n          options = data;\r\n        })\r\n        .catch(() => options = [])\r\n        .finally(() => {\r\n          isFetchingData = false;\r\n          $hasFocus && hasDropdownOpened.set(true);\r\n          listMessage = config.i18n.fetchEmpty;\r\n          tick().then(() => dispatch('fetch', options));\r\n        })\r\n    }, 500);\r\n\r\n    if (initFetchOnly) {\r\n      if (typeof fetch === 'string' && fetch.indexOf('[parent]') !== -1) return null;\r\n      isFetchingData = true;\r\n      debouncedFetch(null);\r\n      return null;\r\n    }\r\n\r\n    fetchUnsubscribe = inputValue.subscribe(value => {\r\n      if (xhr && xhr.readyState !== 4) {  // cancel previously run \r\n        xhr.abort();\r\n      };\r\n      if (!value) {\r\n        listMessage = config.i18n.fetchBefore;\r\n        return;\r\n      }\r\n      isFetchingData = true;\r\n      hasDropdownOpened.set(false);\r\n      debouncedFetch(value);\r\n    });\r\n\r\n    return debouncedFetch;\r\n  }\r\n\r\n  /** ************************************ component logic */\r\n\r\n  let prevSelection = selection;\r\n\r\n  $: {\r\n    if (prevSelection !== selection) {\r\n      clearSelection();\r\n      if (selection) {\r\n        Array.isArray(selection) ? selection.forEach(selectOption) : selectOption(selection);\r\n      }\r\n      prevSelection = selection;\r\n    }\r\n  }\r\n  /** - - - - - - - - - - STORE - - - - - - - - - - - - - -*/\r\n  let selectedOptions = new Set();\r\n  let alreadyCreated = [];\r\n  $: flatItems = flatList(options, itemConfig);\r\n  $: maxReached = max && selectedOptions.size === max \r\n  $: availableItems = maxReached ? [] : filterList(flatItems, $inputValue, multiple, searchField, sortField, itemConfig);\r\n  $: currentListLength = creatable && $inputValue ? availableItems.length : availableItems.length - 1;\r\n  $: listIndex = indexList(availableItems, creatable && $inputValue, itemConfig);\r\n  $: {\r\n    if (dropdownActiveIndex === null) {\r\n      dropdownActiveIndex = listIndex.first;\r\n    } else if (dropdownActiveIndex > listIndex.last) {\r\n      dropdownActiveIndex = listIndex.last;\r\n    }\r\n  }\r\n  $: listMessage = maxReached \r\n    ? config.i18n.max(max)\r\n    : ($inputValue.length && availableItems.length === 0\r\n      ? config.i18n.nomatch \r\n      : config.i18n.empty\r\n    );\r\n  $: itemRenderer = typeof renderer === 'function' ? renderer : (formatterList[renderer] || formatterList.default.bind({ label: currentLabelField}));\r\n  $: {\r\n    const _selectionArray = Array.from(selectedOptions)\r\n      .map(opt => {\r\n        const obj = {};\r\n        itemConfig.optionProps.forEach(prop => obj[prop] = opt[prop]);\r\n        return obj;\r\n      });\r\n    const _unifiedSelection = multiple \r\n      ? _selectionArray\r\n      : (_selectionArray.length ? _selectionArray[0] : null);\r\n    const valueProp = itemConfig.labelAsValue ? currentLabelField : currentValueField;\r\n\r\n    value = multiple \r\n      ? _unifiedSelection.map(opt => opt[valueProp])\r\n      : selectedOptions.size ? _unifiedSelection[valueProp] : null;\r\n    prevSelection = _unifiedSelection;\r\n    selection = prevSelection;\r\n    // Custom-element related\r\n    if (anchor) {\r\n      anchor.innerHTML = (Array.isArray(value) ? value : [value]).reduce((res, item) => {\r\n        if (!item) {\r\n          res = '<option value=\"\" selected=\"\"></option>';\r\n          return res;\r\n        };\r\n        res+= `<option value=\"${item}\" selected>${item}</option>`;\r\n        return res;\r\n      }, '');\r\n      anchor.dispatchEvent(new Event('change'));\r\n    }\r\n  }\r\n  let prevOptions = options;\r\n  $: {\r\n    if (isInitialized && prevOptions !== options) {\r\n      const ivalue = fieldInit('value', options || null, itemConfig);\r\n      const ilabel = fieldInit('label', options || null, itemConfig);\r\n      if (!valueField && currentValueField !== ivalue) itemConfig.valueField = currentValueField = ivalue;\r\n      if (!labelField && currentLabelField !== ilabel) itemConfig.labelField = currentLabelField = ilabel;\r\n    }\r\n  }\r\n  $: {\r\n    itemConfig.labelAsValue = labelAsValue;\r\n  }\r\n\r\n  /**\r\n   * Dispatch change event on add options/remove selected items\r\n   */  \r\n  function emitChangeEvent() {\r\n    tick().then(() => {\r\n      dispatch('change', selection)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Internal helper for passed value array. Should be used for CE\r\n   */ \r\n  function _selectByValues(values) {\r\n    if (!Array.isArray(values)) values = [values];\r\n    if (values && values.length && values[0] instanceof Object) values = values.map(opt => opt[currentValueField]);\r\n    const newAddition = [];\r\n    values.forEach(val => {\r\n      availableItems.some(opt => {\r\n        if (val == (opt[currentValueField])) {\r\n          newAddition.push(opt);\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n    });\r\n    newAddition.forEach(selectOption);\r\n  }\r\n\r\n  /**\r\n   * Add given option to selection pool\r\n   */\r\n  function selectOption(opt) {\r\n    if (maxReached) return;\r\n    \r\n    if (typeof opt === 'string') {\r\n      if (alreadyCreated.includes(opt)) return;\r\n      alreadyCreated.push(opt);\r\n      opt = {\r\n        [currentValueField]: encodeURIComponent(opt),\r\n        [currentLabelField]: `${creatablePrefix}${opt}`,\r\n        isSelected: true,\r\n        _created: true,\r\n      };\r\n      options = [...options, opt];\r\n    }\r\n    opt.isSelected = true;\r\n    if (!multiple) selectedOptions.clear();\r\n    !selectedOptions.has(opt) && selectedOptions.add(opt);\r\n    selectedOptions = selectedOptions;\r\n    flatItems = flatItems;\r\n  }\r\n\r\n  /**\r\n   * Remove option/all options from selection pool\r\n   */\r\n  function deselectOption(opt) {\r\n    selectedOptions.delete(opt);\r\n    opt.isSelected = false;\r\n    selectedOptions = selectedOptions;\r\n    flatItems = flatItems;\r\n  }\r\n\r\n  function clearSelection() {\r\n    selectedOptions.forEach(deselectOption);\r\n  }\r\n\r\n  /**\r\n   * Handle user action on select\r\n   */\r\n  function onSelect(event, opt) {\r\n    opt = opt || event.detail;\r\n    if (disabled || opt.isDisabled || opt.$isGroupHeader) return;\r\n    \r\n    selectOption(opt);\r\n    $inputValue = '';\r\n    if (!multiple) {\r\n      $hasDropdownOpened = false;\r\n    } else {\r\n      tick().then(() => {\r\n        dropdownActiveIndex = maxReached\r\n          ? null\r\n          : listIndex.next(dropdownActiveIndex - 1, true);\r\n      })\r\n    }\r\n    emitChangeEvent();\r\n  }\r\n\r\n  function onDeselect(event, opt) {\r\n    if (disabled) return;\r\n    opt = opt || event.detail;\r\n    if (opt) {\r\n      deselectOption(opt);\r\n    } else {  // apply for 'x' when clearable:true || ctrl+backspace || ctrl+delete\r\n      selectedOptions.forEach(deselectOption);\r\n    }\r\n    tick().then(refControl.focusControl);\r\n    tick().then(() => {\r\n        dropdownActiveIndex = listIndex.next(dropdownActiveIndex - 1); \r\n      })\r\n    emitChangeEvent();\r\n  }\r\n\r\n  /**\r\n   * Dropdown hover handler - update active item\r\n   */\r\n  function onHover(event) {\r\n    if (ignoreHover) {\r\n      ignoreHover = false;\r\n      return;\r\n    }\r\n    dropdownActiveIndex = event.detail;\r\n  }\r\n\r\n  /**\r\n   * Keyboard navigation\r\n   */\r\n  function onKeyDown(event) {\r\n    event = event.detail; // from dispatched event\r\n    if (creatable && delimiter.indexOf(event.key) > -1) {\r\n      $inputValue.length > 0 && onSelect(null, $inputValue); // prevent creating item with delimiter itself\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    const Tab = selectOnTab && $hasDropdownOpened && !event.shiftKey ? 'Tab' : 'No-tab';\r\n    switch (event.key) {\r\n      case 'End':\r\n        if ($inputValue.length !== 0) return;\r\n      case 'PageDown':\r\n        dropdownActiveIndex = listIndex.first;\r\n      case 'ArrowUp': \r\n        if (!$hasDropdownOpened) {\r\n          $hasDropdownOpened = true;\r\n          return;\r\n        }\r\n        event.preventDefault();\r\n        dropdownActiveIndex = listIndex.prev(dropdownActiveIndex);\r\n        tick().then(refDropdown.scrollIntoView);\r\n        ignoreHover = true;\r\n        break;\r\n      case 'Home':\r\n        if ($inputValue.length !== 0) return;\r\n      case 'PageUp':\r\n        dropdownActiveIndex = listIndex.last;\r\n      case 'ArrowDown': \r\n        if (!$hasDropdownOpened) {\r\n          $hasDropdownOpened = true;\r\n          return;\r\n        }\r\n        event.preventDefault();\r\n        dropdownActiveIndex = listIndex.next(dropdownActiveIndex);\r\n        tick().then(refDropdown.scrollIntoView);\r\n        ignoreHover = true;\r\n        break;\r\n      case 'Escape':\r\n        if ($hasDropdownOpened) { // prevent ESC bubble in this case (interfering with modal closing etc. (bootstrap))\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n        }\r\n        if (!$inputValue) {\r\n          $hasDropdownOpened = false;\r\n        }\r\n        $inputValue = '';\r\n        break;\r\n      case Tab:\r\n      case 'Enter':\r\n        if (!$hasDropdownOpened) return;\r\n        let activeDropdownItem = availableItems[dropdownActiveIndex];\r\n        if (creatable && $inputValue) {\r\n          activeDropdownItem = !activeDropdownItem || event.ctrlKey \r\n            ? $inputValue\r\n            : activeDropdownItem\r\n        }\r\n        activeDropdownItem && onSelect(null, activeDropdownItem);\r\n        if (availableItems.length <= dropdownActiveIndex) {\r\n          dropdownActiveIndex = currentListLength > 0 ? currentListLength : listIndex.first;\r\n        }\r\n        event.preventDefault(); // prevent form submit\r\n        break;\r\n      case ' ':\r\n        if (!$hasDropdownOpened) {\r\n          $hasDropdownOpened = true;\r\n          event.preventDefault();\r\n        }\r\n        break;\r\n      // FUTURE: handle 'PageDown' & 'PageUp'\r\n      case 'Backspace':\r\n      case 'Delete':\r\n        if ($inputValue === '' && selectedOptions.size) {\r\n          event.ctrlKey ? onDeselect({ /** no detail prop */}) : onDeselect(null, [...selectedOptions].pop());\r\n        }\r\n      default:\r\n        if (!event.ctrlKey && !['Tab', 'Shift'].includes(event.key) && !$hasDropdownOpened && !isFetchingData) {\r\n          $hasDropdownOpened = true;\r\n        }\r\n        if (!multiple && selectedOptions.size && event.key !== 'Tab') event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enable create items by pasting\r\n   */\r\n  function onPaste(event) {\r\n    if (creatable) {\r\n      event.preventDefault();\r\n      const rx = new RegExp('([^' + delimiter + '\\\\n]+)', 'g');\r\n      const pasted = event.clipboardData.getData('text/plain').replaceAll('/', '\\/');\r\n      const matches = pasted.match(rx);\r\n      if (matches.length === 1 && pasted.indexOf(',') === -1) {\r\n        $inputValue = matches.pop().trim();\r\n      }\r\n      matches.forEach(opt  => onSelect(null, opt.trim()));\r\n    }\r\n    // do nothing otherwise\r\n  }\r\n\r\n  /** ************************************ component lifecycle related */\r\n\r\n  onMount(() => {\r\n    isInitialized = true;\r\n    if (initialValue) _selectByValues(initialValue);\r\n    // Lazy calling of scrollIntoView function, which is required\r\n    // TODO: resolve, probably already fixed\r\n    // if (val <= dropdownActiveIndex) dropdownActiveIndex = val;\r\n    // if (dropdownActiveIndex < 0) dropdownActiveIndex = listIndexMap.first;\r\n    if (creatable) {\r\n      const valueProp = itemConfig.labelAsValue ? currentLabelField : currentValueField;\r\n      alreadyCreated = flatItems.map(opt => opt[valueProp]).filter(opt => opt);\r\n    }\r\n    dropdownActiveIndex = listIndex.first;\r\n    if (prevSelection && !multiple) {\r\n      dropdownActiveIndex = flatItems.findIndex(opt => opt[currentValueField] === prevSelection[currentValueField]);\r\n      tick().then(() => refDropdown && refDropdown.scrollIntoView({}));\r\n    }\r\n    if (anchor) anchor.classList.add('anchored-select');\r\n  });\r\n</script>\r\n\r\n<div class={`svelecte ${className}`} class:is-disabled={disabled} {style}>\r\n  <Control bind:this={refControl} renderer={itemRenderer}\r\n    {disabled} {clearable} {searchable} {placeholder} {multiple} collapseSelection={collapseSelection ? config.collapseSelectionFn : null}\r\n    inputValue={inputValue} hasFocus={hasFocus} hasDropdownOpened={hasDropdownOpened} selectedOptions={Array.from(selectedOptions)} {isFetchingData}\r\n    on:deselect={onDeselect}\r\n    on:keydown={onKeyDown}\r\n    on:paste={onPaste}\r\n  >\r\n    <div slot=\"icon\" class=\"icon-slot\"><slot name=\"icon\"></slot></div>\r\n  </Control>\r\n  <Dropdown bind:this={refDropdown} renderer={itemRenderer} {creatable} {maxReached} {alreadyCreated}\r\n    virtualList={creatable ? false : virtualList} {vlHeight} {vlItemSize}\r\n    dropdownIndex={dropdownActiveIndex}\r\n    items={availableItems} {listIndex}\r\n    {inputValue} {hasDropdownOpened} {listMessage}\r\n    on:select={onSelect} \r\n    on:hover={onHover}\r\n    let:item={item}\r\n  ></Dropdown>\r\n  {#if name && !anchor}\r\n  <select name={name} {multiple} class=\"is-hidden\" tabindex=\"-1\" {required} {disabled}>\r\n    {#each Array.from(selectedOptions) as opt}\r\n    <option value={opt[currentValueField]} selected>{opt[currentLabelField]}</option>\r\n    {/each}\r\n  </select>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n.svelecte { position: relative; flex: 1 1 auto; }\r\n.svelecte.is-disabled { pointer-events: none; }\r\n.icon-slot { display: flex; }\r\n.is-hidden,\r\n:global(.anchored-select) { opacity: 0; position: absolute; z-index: -2; top: 0; height: 38px}\r\n</style>","export const dataset = {\r\n  countryGroups: () => [\r\n    {\r\n      label: 'A',\r\n      options: [{\r\n        value: 'al',\r\n        text: 'Albania'\r\n      },\r\n      {\r\n        value: 'ad',\r\n        text: 'Andorra'\r\n      },\r\n      {\r\n        value: 'am',\r\n        text: 'Armenia'\r\n      },\r\n      {\r\n        value: 'a',\r\n        text: 'Austria'\r\n      },\r\n      {\r\n        value: 'az',\r\n        text: 'Azerbaijan'\r\n      }]\r\n    },\r\n    {\r\n      label: 'B',\r\n      options: [{\r\n        value: 'by',\r\n        text: 'Belarus'\r\n      },\r\n      {\r\n        value: 'be',\r\n        text: 'Belgium'\r\n      },\r\n      {\r\n        value: 'ba',\r\n        text: 'Bosnia and Herzegovina'\r\n      },\r\n      {\r\n        value: 'bg',\r\n        text: 'Bulgaria'\r\n      }]\r\n    },\r\n    {\r\n      label: 'C',\r\n      options: [{\r\n        value: 'hr',\r\n        text: 'Croatia'\r\n      },\r\n      {\r\n        value: 'cy',\r\n        text: 'Cyprus'\r\n      },\r\n      {\r\n        value: 'cz',\r\n        text: 'Czechia'\r\n      }]\r\n    }\r\n  ],\r\n  countries: () => [\r\n    {\r\n      value: 'al',\r\n      text: 'Albania'\r\n    },\r\n    {\r\n      value: 'ad',\r\n      text: 'Andorra'\r\n    },\r\n    {\r\n      value: 'am',\r\n      text: 'Armenia'\r\n    },\r\n    {\r\n      value: 'a',\r\n      text: 'Austria'\r\n    },\r\n    {\r\n      value: 'az',\r\n      text: 'Azerbaijan'\r\n    },\r\n    {\r\n      value: 'by',\r\n      text: 'Belarus'\r\n    },\r\n    {\r\n      value: 'be',\r\n      text: 'Belgium'\r\n    },\r\n    {\r\n      value: 'ba',\r\n      text: 'Bosnia and Herzegovina'\r\n    },\r\n    {\r\n      value: 'bg',\r\n      text: 'Bulgaria'\r\n    },\r\n    {\r\n      value: 'hr',\r\n      text: 'Croatia'\r\n    },\r\n    {\r\n      value: 'cy',\r\n      text: 'Cyprus'\r\n    },\r\n    {\r\n      value: 'cz',\r\n      text: 'Czechia'\r\n    },\r\n    {\r\n      value: 'dk',\r\n      text: 'Denmark'\r\n    },\r\n    {\r\n      value: 'ee',\r\n      text: 'Estonia'\r\n    },\r\n    {\r\n      value: 'fi',\r\n      text: 'Finland'\r\n    },\r\n    {\r\n      value: 'fr',\r\n      text: 'France'\r\n    },\r\n    {\r\n      value: 'ge',\r\n      text: 'Georgia'\r\n    },\r\n    {\r\n      value: 'de',\r\n      text: 'Germany'\r\n    },\r\n    {\r\n      value: 'gr',\r\n      text: 'Greece'\r\n    },\r\n    {\r\n      value: 'hu',\r\n      text: 'Hungary'\r\n    },\r\n    {\r\n      value: 'is',\r\n      text: 'Iceland'\r\n    },\r\n    {\r\n      value: 'ie',\r\n      text: 'Ireland'\r\n    },\r\n    {\r\n      value: 'it',\r\n      text: 'Italy'\r\n    },\r\n    {\r\n      value: 'xk',\r\n      text: 'Kosovo'\r\n    },\r\n    {\r\n      value: 'lv',\r\n      text: 'Latvia'\r\n    },\r\n    {\r\n      value: 'li',\r\n      text: 'Liechtenstein'\r\n    },\r\n    {\r\n      value: 'lt',\r\n      text: 'Lithuania'\r\n    },\r\n    {\r\n      value: 'lu',\r\n      text: 'Luxembourg'\r\n    },\r\n    {\r\n      value: 'mt',\r\n      text: 'Malta'\r\n    },\r\n    {\r\n      value: 'md',\r\n      text: 'Moldova'\r\n    },\r\n    {\r\n      value: 'me',\r\n      text: 'Montenegro'\r\n    },\r\n    {\r\n      value: 'nl',\r\n      text: 'Netherlands'\r\n    },\r\n    {\r\n      value: 'mk',\r\n      text: 'North Macedonia (formerly Macedonia)'\r\n    },\r\n    {\r\n      value: 'no',\r\n      text: 'Norway'\r\n    },\r\n    {\r\n      value: 'pl',\r\n      text: 'Poland'\r\n    },\r\n    {\r\n      value: 'pt',\r\n      text: 'Portugal'\r\n    },\r\n    {\r\n      value: 'ro',\r\n      text: 'Romania'\r\n    },\r\n    {\r\n      value: 'ru',\r\n      text: 'Russia'\r\n    },\r\n    {\r\n      value: 'rs',\r\n      text: 'Serbia'\r\n    },\r\n    {\r\n      value: 'sk',\r\n      text: 'Slovakia'\r\n    },\r\n    {\r\n      value: 'sl',\r\n      text: 'Slovenia'\r\n    },\r\n    {\r\n      value: 'es',\r\n      text: 'Spain'\r\n    },\r\n    {\r\n      value: 'se',\r\n      text: 'Sweden'\r\n    },\r\n    {\r\n      value: 'ch',\r\n      text: 'Switzerland'\r\n    },\r\n    {\r\n      value: 'tr',\r\n      text: 'Turkey'\r\n    },\r\n    {\r\n      value: 'ua',\r\n      text: 'Ukraine'\r\n    },\r\n    {\r\n      value: 'uk',\r\n      text: 'United Kingdom'\r\n    },\r\n  ],\r\n  colors: () => [\r\n    {\r\n      value: 'aqua',\r\n      text: 'Aqua',\r\n      hex: '#00FFFF'\r\n    },\r\n    {\r\n      value: 'black',\r\n      text: 'Black',\r\n      hex: '#000000'\r\n    },\r\n    {\r\n      value: 'blue',\r\n      text: 'Blue',\r\n      hex: '#0000FF'\r\n    },\r\n    {\r\n      value: 'gray',\r\n      text: 'Gray',\r\n      hex: '#808080'\r\n    },\r\n    {\r\n      value: 'green',\r\n      text: 'Green',\r\n      hex: '#008000'\r\n    },\r\n    {\r\n      value: 'fuchsia',\r\n      text: 'Fuchsia',\r\n      hex: '#FF00FF'\r\n    },\r\n    {\r\n      value: 'lime',\r\n      text: 'Lime',\r\n      hex: '#00FF00'\r\n    },\r\n    {\r\n      value: 'maroon',\r\n      text: 'Maroon',\r\n      hex: '#800000'\r\n    },\r\n    {\r\n      value: 'navy',\r\n      text: 'Navy',\r\n      hex: '#000080'\r\n    },\r\n    {\r\n      value: 'olive',\r\n      text: 'Olive',\r\n      hex: '#808000'\r\n    },\r\n    {\r\n      value: 'purple',\r\n      text: 'Purple',\r\n      hex: '#800080'\r\n    },\r\n    {\r\n      value: 'red',\r\n      text: 'Red',\r\n      hex: '#FF0000'\r\n    },\r\n    {\r\n      value: 'silver',\r\n      text: 'Silver',\r\n      hex: '#C0C0C0'\r\n    },\r\n    {\r\n      value: 'teal',\r\n      text: 'Teal',\r\n      hex: '#008080'\r\n    },\r\n    {\r\n      value: 'yellow',\r\n      text: 'Yellow',\r\n      hex: '#FFFF00'\r\n    },\r\n    {\r\n      value: 'white',\r\n      text: 'White',\r\n      hex: '#FFFFFF'\r\n    }\r\n  ]\r\n};","<script>\r\n  import Svelecte from 'svelecte';\r\n  import { dataset } from '../data.js';\r\n\r\n  let options = dataset.countries();\r\n\r\n  let selection = null;\r\n  let value = null;\r\n</script>\r\n\r\n<Svelecte {options} \r\n  bind:selection={selection}\r\n  bind:value={value}\r\n  placeholder=\"Select country\"\r\n></Svelecte>\r\n\r\n<div>Current <code>selection</code> value: <b>{JSON.stringify(selection) }</b></div>\r\n<div>Current <code>value</code> value: <b>{value}</b></div>","<script>\r\n  import Svelecte from 'svelecte';\r\n  import { dataset } from '../data.js';\r\n\r\n  /** plain text array */\r\n  let options = dataset.countries().map(opt => opt.text);\r\n\r\n  let labelAsValue = false;\r\n\r\n  let selection = null;\r\n  let value = null;\r\n</script>\r\n\r\n<Svelecte {options} {labelAsValue} \r\n  bind:selection={selection} \r\n  bind:value={value} \r\n  placeholder=\"Select country\"\r\n></Svelecte>\r\n\r\n<div class=\"float-right\">\r\n  Pick\r\n  <label><input type=\"radio\" bind:group={labelAsValue} value={false}> value</label>\r\n  <label><input type=\"radio\" bind:group={labelAsValue} id=\"\" value={true}> label</label>\r\n</div>\r\n\r\n<div>\r\n  Current <code>selection</code> value: <b>{JSON.stringify(selection) }</b>\r\n  <br>\r\n  Current <code>value</code> value: <b>{value}</b>\r\n</div>","<script>\r\n  import Svelecte from 'svelecte';\r\n  import { dataset } from '../data.js';\r\n</script>\r\n\r\n<Svelecte options={dataset.countryGroups()}></Svelecte>","<script>\r\n  import Svelecte, { addFormatter } from 'svelecte';\r\n  import { dataset } from '../data.js';\r\n\r\n  let options = dataset.colors();\r\n\r\n  function colorRenderer(item, isSelected) {\r\n    if (isSelected) {\r\n      return `<div class=\"color-item\" style=\"background-color: ${item.hex}\">\r\n        Selected color\r\n      </div>`;\r\n    }\r\n    return `<span class=\"color-item\" style=\"background-color: ${item.hex};\">\r\n      </span>${item.text}`;\r\n  }\r\n\r\n  addFormatter('color-blocks', colorRenderer);\r\n</script>\r\n\r\n<Svelecte {options} renderer=\"color-blocks\" placeholder=\"Select color\"></Svelecte>","<script>\r\n  import Svelecte from 'svelecte';\r\n  import { dataset } from '../data.js';\r\n\r\n  let options = dataset.colors();\r\n\r\n  let iconValue = null;\r\n  $: iconSlot = iconValue \r\n    ? (iconValue === 'black' ? '💀' : '👍')\r\n    : '👉';\r\n</script>\r\n\r\n<Svelecte options={options} \r\n  bind:value={iconValue}\r\n  placeholder=\"Pick your color, even the black 😉\"\r\n>\r\n  <b slot=\"icon\">{iconSlot}</b>\r\n</Svelecte>","<script>\n  import Svelecte, { addFormatter, config } from 'svelecte';\n  import { dataset } from '../data.js';\n\n  let myValue = null;\n  let dataSrc = null;\n  let classSelection = 'svelecte-control';\n  let availableRenderers = {\n    opts: [\n      'caps',         // defined in example 09\n      'dotted',       // defined in example 09\n      'color-blocks'  // defined in example 04\n    ],\n    countries: [\n      'caps',\n    ],\n    groups: [\n      'caps',\n    ],\n    colors: [\n      'caps',         // defined in example 09\n      'dotted',       // defined in example 09\n      'color-blocks'  // defined in example 04\n    ],\n    json: [],         // no additional renderers,\n    tags: []\n  };\n\n\n  const remotes = {\n    colors: 'https://my-json-server.typicode.com/mskocik/svelecte-docs/colors?value_like=[query]',\n    json: 'https://jsonplaceholder.typicode.com/users/'\n  }\n  const slots = {\n    opts: '🎨',\n    countries: '🌍',\n    groups: '🔠',\n    colors: '⚡',\n    json: '🙋',\n    tags: '🔖'\n  }\n\n  let cmp;\n  let isFlexWidth = false;\n  let { \n    multiple, max, collapseSelection,\n    placeholder, searchable, clearable, selectOnTab,\n    disabled, creatable, creatablePrefix, delimiter, virtualList,\n    style, searchField\n  } = config;\n  let settings = {\n    searchable: true,\n    placeholder: 'Pick some option variant 👉',\n    options: [],\n    disabled: true\n  };\n  let optionsList = [\n    { value: 'opts', text: '🎨 Colors'},\n    { value: 'countries', text: '🌍 Countries'},\n    { value: 'groups', text: '🔠 Country (groups)'},\n    { value: 'colors', text: '⚡ Colors <small class=\"label label-primary\">API</small>'},\n    { value: 'json', text: '🙋 Users <small class=\"label label-primary\">API</small>'},\n    { value: 'tags', text: '🔖 Empty list'}\n  ]\n  $: slot = slots[remoteValue] || '🚫';\n  let remoteValue = null;\n  $: {\n    remoteValue = dataSrc ? dataSrc.value : null;\n  }\n\n  let prevRemoteValue = remoteValue;\n  $: {\n    if (prevRemoteValue !== remoteValue) {\n      myValue = multiple ? [] : null;\n      setRemote();\n      prevRemoteValue = remoteValue;\n    }\n  }\n\n  function setRemote() {\n    searchField = null;\n    if (remoteValue === 'opts') {\n      settings = {\n        multiple, max, collapseSelection,\n        searchable, clearable, selectOnTab,\n        disabled, creatable, creatablePrefix, delimiter, virtualList,\n        style,\n        class: classSelection,\n        options: dataset.colors(),\n        fetch: null,\n        placeholder: 'Pick your color'\n      }\n    } else if (!remoteValue) {\n      settings = {\n        placeholder: 'Pick some option variant 👉',\n        options: [],\n        disabled: true\n      }\n    } else if (remoteValue === 'countries') {\n      settings = {\n        multiple, max, collapseSelection,\n        searchable, clearable, selectOnTab,\n        disabled, creatable, creatablePrefix, delimiter, virtualList,\n        style,\n        class: classSelection,\n        options: dataset.countries(),\n        fetch: null,\n        placeholder: 'Choose your favourite European country'\n      };\n    } else if (remoteValue === 'groups') {\n      settings = {\n        multiple, max, collapseSelection,\n        searchable, clearable, selectOnTab,\n        disabled, creatable, creatablePrefix, delimiter, virtualList,\n        style,\n        class: classSelection,\n        options: dataset.countryGroups(),\n        fetch: null,\n        placeholder: 'Select from country group',\n      }\n    } else if (['json', 'colors'].includes(remoteValue)) {\n      settings = {\n        multiple, max, collapseSelection,\n        searchable, clearable, selectOnTab,\n        disabled, creatable, creatablePrefix, delimiter, virtualList,\n        style,\n        searchField: remoteValue === 'json' ? ['name', 'email'] : null,\n        class: classSelection,\n        fetch: remotes[remoteValue],\n        fetchCallback: remoteValue === 'json' ? fetchCallback : null,\n        placeholder: remoteValue === 'json' ? 'Select from prefetched list' : 'Search for color',\n        renderer: remoteValue === 'json' ? 'avatar' : null,\n        options: []\n      }\n    } else if (remoteValue === 'tags') {\n      settings = {\n        multiple, max, collapseSelection,\n        searchable, clearable, selectOnTab, placeholder,\n        disabled, creatable, creatablePrefix, delimiter, virtualList,\n        style,\n        class: classSelection,\n        fetch: null,\n        fetchCallback: null,\n        renderer: null,\n        options: []\n      }\n    }\n  }\n\n  function s(prop, value) {\n    settings[prop] = value !== null ? value : !settings[prop];\n    settings = settings;\n  }\n\n  function fetchCallback(resp) {\n    return resp.map(user => {\n      return {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        street: `${user.address.street} ${user.address.suite}`,\n        city: user.address.city\n      }\n    });\n  }\n\n  function fetchRenderer(item, isSelected) {\n    return isSelected\n      ? `<figure class=\"avatar avatar-sm\" data-initial=\"${item.name.split(' ').map(w => w[0]).slice(0,2).join('')}\" style=\"background-color: #2ed020;\"></figure>\n          ${item.name}`\n      : `<div class=\"avatar-item\">\n        <figure class=\"avatar avatar-bg\" data-initial=\"${item.name.split(' ').map(w => w[0]).slice(0,2).join('')}\" style=\"background-color: #aaa;\"></figure>\n        <div class=\"ml-2\">\n          ${item.name}<br><small>${item.email}</small>\n        </div>\n      </div>`\n  }\n\n  function onPresetCollapsible() {\n    multiple = true;\n    collapseSelection = true;\n    isFlexWidth = true;\n    dataSrc = optionsList[1];\n    const countries = dataset.countries();\n    setTimeout(() => {\n      cmp.setSelection([countries[2], countries[7]]);\n    });\n    setTimeout(() => {\n      document.querySelector('#example-7 input').focus();\n    }, 300);\n  }\n\n  function onPresetCreatableOnly() {\n    creatable = true;\n    multiple = true;\n    max = 0;\n    isFlexWidth = false;\n    dataSrc = optionsList[optionsList.length - 1];\n    disabled = false;\n    placeholder = 'Create!';\n    setTimeout(() => {\n      document.querySelector('#example-7 input').focus();\n    }, 300);\n  }\n\n  addFormatter('avatar', fetchRenderer);\n</script>\n\n<div class=\"columns\">\n  <div class=\"column col-xl-12 col-5\">\n    <h4>&bull; Complex playground &bull;</h4>\n    \n    <div class=\"form-row example-wrap\" class:flexible-svelecte={isFlexWidth}>\n      <Svelecte {...settings} bind:selection={myValue} name=\"select\" bind:this={cmp}>\n        <b slot=\"icon\">{slot}</b>\n      </Svelecte>\n      Current value: {JSON.stringify(myValue)}\n\n      <p class=\"mt-2\">Complete playground with almost options available. Try for example: </p>\n      <ul>\n        <li>\n          <button class=\"btn btn-sm\" on:click={onPresetCollapsible}>collapsible multiselection</button>\n        </li>\n        <li>\n          <button class=\"btn btn-sm\" on:click={onPresetCreatableOnly}>creatable (create your tags)</button>\n        </li>\n      </ul>\n    </div>\n\n    <p class=\"mt-2\">\n      ⚠ When searching through items, AND is used as logical operator when space is entered. If you would like\n      to use OR, you have to start your search query by \"<code>|| </code>\" prefix. The space on 3rd position \n      is also very important here.\n    </p>\n  </div>\n  <div class=\"column col-xl-12 col-7\">\n    <fieldset>\n      <legend>Customize</legend>\n      <div class=\"columns\">\n        <div class=\"col\">\n\n          <fieldset>\n            <legend>Options</legend>\n            <Svelecte options={optionsList} bind:selection={dataSrc} style=\"width: 195px\" on:change={() => {myValue = multiple ? [] : null}}></Svelecte>\n            <p class=\"mb-0\">\n              Options with <small class=\"label label-primary\">API</small> label<br>\n              to demonstrate AJAX fetch.</p>\n          </fieldset>\n\n          <fieldset>\n            <legend>Rendering</legend>\n            <select on:change={e => s('renderer', e.target.value)} on:blur disabled={!remoteValue || !availableRenderers[remoteValue].length}>\n              <option value=\"\">Default</option>\n              {#each availableRenderers[remoteValue] || [] as item, i}\n              <option value={item}>{item}</option>\n              {/each}\n            </select>\n          </fieldset>\n        </div>\n\n        <fieldset>\n          <legend>Control</legend>\n          <label><input type=\"checkbox\" on:change={e => s('disabled', e.target.checked)} bind:checked={disabled}> Disabled</label><br>\n          <label><input type=\"checkbox\" on:change={e => s('creatable', e.target.checked)}  bind:checked={creatable}> Creatable</label>\n          <span class=\"tooltip\" data-tooltip=\"prefix that is shown\nwhen creating new items\">\n            <input class=\"input-sm input-short\" placeholder=\"Item prefix\" on:input={e => s('creatablePrefix', e.target.value)} disabled={!settings.creatable}  bind:value={creatablePrefix}></span>\n          <span class=\"tooltip\" data-tooltip=\"Delimiter character for new items\n(when pasting etc.)\">\n            <input class=\"input-sm input-short\" placeholder=\"Delimiter\" on:input={e => s('delimiter', e.target.value)} disabled={!settings.creatable}  bind:value={delimiter}></span><br>\n          <label><input type=\"checkbox\" on:change={e => s('virtualList', e.target.checked)} bind:checked={virtualList}> Use virtual list</label><br>\n          <button class=\"btn mt-2\" on:click={() => { myValue = settings.multiple ? [] : null } }>Clear selection</button>\n        </fieldset>\n\n        <fieldset>\n          <legend>Multiple</legend>\n          <label><input type=\"checkbox\" on:change={e => s('multiple', e.target.checked)}  bind:checked={multiple}> Multiple</label>\n          <span class=\"tooltip\" data-tooltip=\"Limit selection count\"><input class=\"input-sm\" type=\"number\" placeholder=\"limit\" disabled={!settings.multiple} on:input={e => s('max', parseInt(e.target.value))} min=\"0\" bind:value={max}></span>\n          <br>\n          <label class=\"tooltip\" data-tooltip=\"Show only selection sum string\"><input type=\"checkbox\" on:change={e => s('collapseSelection', e.target.checked) } disabled={!settings.multiple} bind:checked={collapseSelection}> Collapse selection</label>\n          \n        </fieldset>\n        \n        <fieldset>\n          <legend>UI</legend>\n          Placeholder <input class=\"input-sm\" on:input={e => s('placeholder', e.target.value)} bind:value={settings.placeholder}><br>\n          <label><input type=\"checkbox\" on:change={e => s('searchable', e.target.checked)} bind:checked={searchable}> Searchable</label><br>\n          <label><input type=\"checkbox\" on:change={e => s('clearable', e.target.checked)} bind:checked={clearable}> Clearable</label><br>\n          <label><input type=\"checkbox\" on:change={e => s('selectOnTab', e.target.checked)} bind:checked={selectOnTab}> Select on <kbd>Tab</kbd></label>\n          <hr>\n          <label><input type=\"checkbox\" bind:checked={isFlexWidth}> Inline width</label>\n        </fieldset>\n\n        <fieldset>\n          <legend>Styling</legend>\n          <span>CSS class</span>\n          <select on:change={e => s('class', e.target.value)} bind:value={classSelection} on:blur>\n            <option value=\"svelecte-control\">svelecte-control (default)</option>\n            <option value=\"svelecte-control custom-css\">red style (custom)</option>\n          </select>\n\n        </fieldset>\n      </div>\n    </fieldset>\n  </div>\n</div>\n\n<style>\n  :global(.icon-slot b) {\n    font-family: 'Fira Code';\n    margin-left: 0.5rem;\n  }\n  :global(.flexible-svelecte .sv-control) {\n    display: inline-flex !important;\n  }\n  .flexible-svelecte :global(.svelecte) {\n    min-width: 100px;\n  }\n  .flexible-svelecte :global(.sv-input-row) {\n    min-width: 100px;\n    transition: min-width .15s ease;\n  }\n  .flexible-svelecte :global(.is-active .sv-input-row) {\n    min-width: 300px;\n    transition: min-width .15s ease;\n  }\n\n  :global(.svelecte-control.custom-css .sv-control) {\n    border: 1px dashed rgb(255, 147, 147) !important;\n  }\n  :global(.custom-css .sv-control.is-active) {\n    border: 1px dashed red !important;\n    box-shadow: 0 0px 7px rgba(255, 0, 0, 0.151);\n  }\n  :global(.svelecte-control.custom-css .sv-dropdown) {\n    border-color: rgba(255, 0, 0, 0.2) !important;\n  }\n  :global(.svelecte-control.custom-css .sv-dropdown .highlight) {\n    color: white;\n    background-color: rgb(167, 63, 63);\n  }\n  :global(.custom-css .sv-input-row .sv-item-content) {\n    color: rgb(190, 74, 74);\n    text-decoration: underline;\n    font-weight: bold;\n  }\n  :global(.custom-css .sv-input-row .inputBox::placeholder) {\n    color: red;\n  }\n  :global(.custom-css .sv-dd-item-active > .sv-item) {\n    background-color: rgba(255, 0, 0, 0.151);\n  }\n  /* input {\n    width: 100%;\n    margin-bottom: 0;\n  }  */\n  .form-row {\n    margin-bottom: 2rem;\n    min-height: 20px;\n  }\n  /* .form-row:focus-within {\n    box-shadow: 0 0 10px #ccc;\n  } */\n  :global(.optgroup-header) {\n    height: 40px;\n    padding-top: 10px !important;\n    text-align: left;\n  }\n  fieldset {\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    padding: 0.5rem;\n    background-color: #ffecec;\n  }\n  fieldset fieldset {\n    margin: 0 .5rem .5rem;\n  }\n  legend {\n    border-radius: 4px;\n    background-color: #000;\n    color: #fff;\n    padding: 3px 6px;\n    font-size: 14px;\n    margin-bottom: 0;\n  }\n  :global(.sv-input-row .color-item) {\n    color:transparent;\n  }\n  :global(.sv-dropdown .color-item) {\n    display: inline-flex;\n    width: 16px; \n    height: 16px; \n    border-radius: 50%;\n    border: 1px solid #ccc;\n    margin-right: .5rem;\n    align-self: center;\n    position: relative;\n    top: 2px;\n  }\n  input[type=number] {\n    width: 60px;\n  }\n  .input-short {\n    width: 100px;\n  }\n  :global(.avatar-item) {\n    display: flex;\n    align-items: center;\n  }\n  :global(.avatar-bg) {\n    height: 2rem;\n    width: 2rem;\n  }\n  :global(.sv-control) {\n    background-color: white;\n  }\n</style>","import Svelecte, { addFormatter, config } from 'svelecte';\r\n\r\nexport { addFormatter, config };\r\n\r\nconst OPTION_LIST = [\r\n  'options', 'fetch', 'name', 'required', 'value',\r\n  'multiple','disabled', 'max', 'creatable', 'delimiter',\r\n  'placeholder', 'renderer', 'searchable', 'clearable', 'fetch', 'value-field', 'label-field',\r\n  'anchor', 'virtual-list'\r\n];\r\n\r\nfunction formatValue(name, value) {\r\n  switch (name) {\r\n    case 'options':\r\n      if (Array.isArray(value)) return value;\r\n      try {\r\n        value = JSON.parse(value);\r\n        if (!Array.isArray(value)) {\r\n          value = [];\r\n        }\r\n      } catch (e) {\r\n        value = [];\r\n      }\r\n      return value;\r\n    case 'value':\r\n      return value ? value.split(',').map(item => {\r\n        const _v = parseInt(item);\r\n        return isNaN(_v) ? item : _v;\r\n      }) : '';\r\n    case 'renderer':\r\n      return value || 'default';\r\n    case 'searchable':\r\n      return value == 'true';\r\n    case 'clearable':\r\n      return value != 'false';\r\n    case 'required':\r\n    case 'virtual-list':\r\n    case 'multiple':\r\n    case 'creatable':\r\n    case 'selectOnTab':\r\n      return value !== null;\r\n    case 'disabled':\r\n      return value !== null;\r\n    case 'max':\r\n      return isNaN(parseInt(value)) ? 0 : parseInt(value);\r\n    case 'anchor':\r\n      return value ? document.getElementById(value) : null;\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction formatProp(name) {\r\n  switch (name) {\r\n    case 'virtual-list': return 'virtualList';\r\n    case 'value-field': return 'valueField';\r\n    case 'label-field': return 'labelField';\r\n  }\r\n  return name;\r\n}\r\n\r\n/**\r\n * Connect Custom Component attributes to Svelte Component properties\r\n * @param {string} name Name of the Custom Component\r\n */\r\nclass SvelecteElement extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.svelecte = undefined;\r\n    this._fetchOpts = null;\r\n    \r\n    /** ************************************ public API */\r\n    this.setOptions = options => this.svelecte.setOptions(options);\r\n    Object.defineProperties(this, {\r\n      'selection': {\r\n        get() {\r\n          return this.svelecte\r\n            ? this.svelecte.getSelection()\r\n            : null;\r\n        }\r\n      },\r\n      'value': {\r\n        get() {\r\n          return this.svelecte\r\n            ? this.svelecte.getSelection(true)\r\n            : null;\r\n        },\r\n        set(value) {\r\n          this.setAttribute('value', Array.isArray(value) ? value.join(',') : value);\r\n        }\r\n      },\r\n      'options': {\r\n        get() {\r\n          return this.hasAttribute('options')\r\n            ? JSON.parse(this.getAttribute('options'))\r\n            : (this._fetchOpts || []);\r\n        },\r\n        set(value) {\r\n          this.setAttribute('options', Array.isArray(value) ? JSON.stringify(value) : value);\r\n        }\r\n      },\r\n      'disabled': {\r\n        get() {\r\n          return this.getAttribute('disabled') !== null;\r\n        },\r\n        set(value) {\r\n          if (!value) { \r\n            this.removeAttribute('disabled');\r\n          } else {\r\n            this.setAttribute('disabled', value === true ? '' : value);\r\n          }\r\n        }\r\n      },\r\n      'multiple': {\r\n        get() {\r\n          return this.getAttribute('multiple') !== null;\r\n        },\r\n        set(value) {\r\n          if (!value) { \r\n            this.removeAttribute('multiple');\r\n          } else {\r\n            this.setAttribute('multiple', value === true ? '' : value);\r\n          }\r\n        }\r\n      },\r\n      'creatable': {\r\n        get() {\r\n          return this.getAttribute('creatable') !== null;\r\n        },\r\n        set(value) {\r\n          if (!value) { \r\n            this.removeAttribute('creatable');\r\n          } else {\r\n            this.setAttribute('creatable', value === true ? '' : value);\r\n          }\r\n        }\r\n      },\r\n      'clearable': {\r\n        get() {\r\n          return this.getAttribute('clearable') !== 'false';\r\n        },\r\n        set(value) {\r\n          this.setAttribute('clearable', value ? 'true' : 'false');\r\n        }\r\n      },\r\n      'placeholder': {\r\n        get() {\r\n          return this.getAttribute('placeholder') || '';\r\n        },\r\n        set(value) {\r\n          this.setAttribute('placeholder', value || 'Select');\r\n        }\r\n      },\r\n      'renderer': {\r\n        get() {\r\n          return this.getAttribute('renderer') || 'default';\r\n        },\r\n        set(value) {\r\n          value && this.setAttribute('renderer', value);\r\n        }\r\n      },\r\n      'required': {\r\n        get() {\r\n          return this.hasAttribute('required');\r\n        },\r\n        set(value) {\r\n          if (!value && value !== '') {\r\n            this.removeAttribute('required');\r\n          } else {\r\n            this.setAttribute('required', '');\r\n          }\r\n        }\r\n      },\r\n      'anchor': {\r\n        get() {\r\n          return this.getAttribute('anchor');\r\n        },\r\n        set(value) {\r\n          this.setAttribute('anchor', value);\r\n        }\r\n      },\r\n      'max': {\r\n        get() {\r\n          return this.getAttribute('max') || 0;\r\n        },\r\n        set(value) {\r\n          try {\r\n            value = parseInt(value);\r\n            if (value < 0) value = 0;\r\n          } catch (e) {\r\n            value = 0;\r\n          }\r\n          this.setAttribute('max', value);\r\n        }\r\n      },\r\n      'delimiter': {\r\n        get() {\r\n          return this.getAttribute('delimiter') || ',';\r\n        },\r\n        set(value) {\r\n          this.setAttribute('delimiter', value);\r\n        }\r\n      },\r\n      'valueField': {\r\n        get() {\r\n          return this.getAttribute('value-field') || '';\r\n        },\r\n        set(value) {\r\n          this.setAttribute('value-field', value);\r\n        }\r\n      },\r\n      'labelField': {\r\n        get() {\r\n          return this.getAttribute('labelField') || '';\r\n        },\r\n        set(value) {\r\n          this.setAttribute('labelField', value);\r\n        }\r\n      },\r\n      'virtualList': {\r\n        get() {\r\n          return this.hasAttribute('virtual-list');\r\n        },\r\n        set(value) {\r\n          if (!value && value !== '') {\r\n            this.removeAttribute('virtual-list');\r\n          } else {\r\n            this.setAttribute('virtual-list', '');\r\n          }\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  focus() {\r\n    !this.disabled && this.querySelector('input').focus();\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    return OPTION_LIST;\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    if (this.svelecte && oldValue !== newValue) {\r\n      name === 'value'\r\n        ? this.svelecte.setSelection(formatValue(name, newValue))\r\n        : this.svelecte.$set({ [formatProp(name)]: formatValue(name, newValue) });\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    if (this.hasAttribute('parent') || this.hasAttribute('anchor') || this.hasAttribute('lazy')) {\r\n      setTimeout(() => { this.render() });\r\n    } else {\r\n      this.render();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let props = {};\r\n    for (const attr of OPTION_LIST) {\r\n      if (this.hasAttribute(attr)) {\r\n        props[attr] = formatValue(attr, this.getAttribute(attr));\r\n      }\r\n    }\r\n    if (this.hasAttribute('class')) {\r\n      props.class = this.getAttribute('class');\r\n    }\r\n    if (this.hasAttribute('parent')) {\r\n      delete props['fetch'];\r\n      props.disabled = true;\r\n      this.parent = document.getElementById(this.getAttribute('parent'));\r\n      if (!this.parent.value && this.svelecte) {\r\n        return;\r\n      };\r\n      this.parentCallback = e => {\r\n        if (!e.target.selection || (Array.isArray(e.target.selection) && !e.target.selection.length)) {\r\n          this.svelecte.clearByParent(true);\r\n          return;\r\n        }\r\n        !this.parent.disabled && this.removeAttribute('disabled');\r\n        if (this.hasAttribute('fetch')) {\r\n          this.svelecte.clearByParent(true);\r\n          const fetchUrl = this.getAttribute('fetch').replace('[parent]', e.target.value);\r\n          this.svelecte.$set({ fetch: fetchUrl, disabled: false });\r\n        }\r\n      };\r\n      this.parent.addEventListener('change', this.parentCallback);\r\n    }\r\n    const anchorSelect = this.querySelector('select');\r\n    if (anchorSelect) {\r\n      props['anchor'] = anchorSelect;\r\n      anchorSelect.tabIndex = -1; // just to be sure\r\n    }\r\n    // if (this.childElementCount > 0) {\r\n    //   props.options = Array.prototype.slice.call(this.children).map(opt => {\r\n    //     return Object.assign({\r\n    //       isSelected: opt.selected,\r\n    //       isDisabled: opt.disabled\r\n    //     }, opt.dataset.data ? JSON.parse(opt.dataset.data)\r\n    //       : {\r\n    //         value: opt.value,\r\n    //         text: opt.text,\r\n    //       }\r\n    //     );\r\n    //   });\r\n    //   this.innerHTML = '';\r\n    // }\r\n    this.svelecte = new Svelecte({\r\n      target: this,\r\n      anchor: anchorSelect,\r\n      props,\r\n    });\r\n    this.svelecte.$on('change', e => {\r\n      const value = this.svelecte.getSelection(true);\r\n      this.setAttribute('value', Array.isArray(value) ? value.join(',') : value);\r\n      this.dispatchEvent(e);\r\n    });\r\n    this.svelecte.$on('fetch', e => {\r\n      this._fetchOpts = e.detail;\r\n      this.dispatchEvent(e);\r\n    });\r\n    return true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.svelecte && this.svelecte.$destroy();\r\n    this.parent && this.parent.removeEventListener('change', this.parentCallback);\r\n  }\r\n}\r\n\r\nexport function registerSvelecte(name) {\r\n  window.customElements.define(name || 'el-svelecte', SvelecteElement);\r\n}\r\n","<script>\r\n  import { addFormatter, config, registerSvelecte } from 'svelecte-element';\r\n  import { dataset } from '../data.js';\r\n\r\n  let container;\r\n  let optionList;\r\n  let optionRenderer;\r\n  config.clearable = true;\r\n\r\n  $: {\r\n    if (optionList !== 'colors' && optionRenderer === 'dotted') {\r\n      optionRenderer = '';\r\n    }\r\n  }\r\n\r\n  /** here we register svelecte as custom element */\r\n  registerSvelecte('el-svelecte');\r\n\r\n  /** define some custom renderers */\r\n  addFormatter('dotted', item => `<span style=\"background-color:${item.hex}\" class=\"color\"></span> ${item.text}`);\r\n  addFormatter('caps', item => item.text.toUpperCase());\r\n\r\n  function onSubmit() {\r\n    /** here the svelecte is defined */\r\n    const el = document.createElement('el-svelecte');\r\n    el.options = optionList === 'tags' ? [] : dataset[optionList]();\r\n    el.renderer = optionRenderer;\r\n    if (optionList === 'tags' ) {\r\n      el.creatable = true;\r\n      el.multiple = true;\r\n    }\r\n    el.onchange = e => {\r\n      e.detail && alert(Array.isArray(e.detail) \r\n        ? e.detail.reduce((res, opt) => {\r\n          res.push(opt.value);\r\n            return res;\r\n          }, []) .join(', ')\r\n        : e.detail.value\r\n      );\r\n      console.log(e.detail);\r\n    }\r\n    /** that's all! */\r\n\r\n    container.insertBefore(el, container.lastElementChild);\r\n    const rmBtn = document.createElement('button');\r\n    rmBtn.className = 'btn float-right ml-2';\r\n    rmBtn.style = 'z-index: 1; position: relative';\r\n    rmBtn.textContent = 'Remove select';\r\n    rmBtn.onclick = () => {\r\n      container.removeChild(el);\r\n      container.removeChild(rmBtn);\r\n    };\r\n    container.insertBefore(rmBtn, container.lastElementChild);\r\n    container.insertBefore(el, container.lastElementChild);\r\n    optionList = '';\r\n    optionRenderer = '';\r\n  }\r\n</script>\r\n\r\n<div bind:this={container}>\r\n  <form action=\"\" on:submit|preventDefault={onSubmit}>\r\n    Create new\r\n    <select bind:value={optionList} required>\r\n      <option value=\"\">Select options</option>\r\n      <option value=\"colors\">Colors</option>\r\n      <option value=\"countries\">Countries</option>\r\n      <option value=\"countryGroups\">Groups</option>\r\n      <option value=\"tags\">Tags (cretable)</option>\r\n    </select>\r\n    <select bind:value={optionRenderer}>\r\n      <option value=\"\">Default renderer</option>\r\n      <option value=\"dotted\" disabled={optionList !== 'colors'}>Dotted (color only)</option>\r\n      <option value=\"caps\">Caps (all letters uppercase)</option>\r\n    </select>\r\n\r\n    <button class=\"btn\" type=\"submit\">Add Svelecte</button>\r\n  </form>\r\n</div>","<script>\r\n  let payload = null;\r\n\r\n  function onSubmit(e) {\r\n    const object = {};\r\n    const formData = new FormData(e.target);\r\n    formData.forEach((value, key) => object[key] = value);\r\n    payload = JSON.stringify(object, null, 2);\r\n  }\r\n</script>\r\n\r\n\r\n<form action=\"\" on:submit|preventDefault={onSubmit}>\r\n  <el-svelecte\r\n    name=\"parent_value\"\r\n    options={`[{\"value\":\"posts\",\"text\":\"Posts\"},{\"value\":\"users\",\"text\":\"Users\"},{\"value\":\"comments\",\"text\":\"Comments\"}]`}\r\n    id=\"is-parent\" required>\r\n  </el-svelecte>\r\n  <el-svelecte name=\"child_value\" parent=\"is-parent\" required\r\n    fetch=\"https://jsonplaceholder.typicode.com/[parent]\">\r\n  </el-svelecte>\r\n  <button type=\"submit\" class=\"btn btn-success\">Send form</button>\r\n  {#if payload}\r\n    <pre>{payload}</pre>\r\n  {/if}\r\n</form>","<script>\r\n  import { onMount, tick } from 'svelte';\r\n  import { dataset } from './../data';\r\n  \r\n  onMount(() => {\r\n    tick().then(() => {\r\n\r\n      new Vue({\r\n        el: '#vue',\r\n        data: {\r\n          placeholder: 'Select or create color',\r\n          selected: [],\r\n          opts: JSON.stringify(dataset.colors())\r\n        },\r\n        methods: {\r\n          onChange: function(e) {\r\n            this.selected = e.target.value;\r\n          }\r\n        },\r\n        template: `<div>\r\n          <h6>Vue 2 example</h6>\r\n          <div>\r\n            <el-svelecte :options=\"opts\"  @change=\"onChange\"\r\n              :value=\"selected\"\r\n              :placeholder=\"placeholder\"\r\n              value-field=\"hex\"\r\n              multiple creatable\r\n            ></el-svelecte>\r\n          </div>\r\n          <div>Selection: {{ selected }}</div>\r\n        </div> `\r\n      });\r\n    });\r\n  })\r\n</script>\r\n\r\n<div class=\"example-wrap\" style=\"border-color: #41b883; box-shadow: 0 0 10px #41b883 inset\">\r\n  <div id=\"vue\"></div>\r\n</div>","\nimport BasicExample from './examples/01-basic.svelte';\nimport BasicExampleExt from './examples/02-basicPlain.svelte';\nimport Groups from './examples/03-groups.svelte';\nimport ItemRender from './examples/04-item-rendering.svelte';\nimport Slot from './examples/05-slot.svelte';\nimport Fetch from './examples/06-fetch.svelte';\nimport Playground from './examples/07-playground.svelte';\nimport Element from './examples/08-custom-element.svelte';\nimport Dependent from './examples/09-custom-dependent.svelte';\nimport Vue from './examples/10-vue.svelte';\n\n[BasicExample, BasicExampleExt, Groups, ItemRender, Slot, Fetch, Playground, Element, Dependent, Vue]\n  .forEach(\n    (component, index) => new component({\n      target: document.getElementById(`example-${index +1}`),\n    })\n  );\n\n/** FETCH example sources */\nconst promises = [];\ndocument.querySelectorAll('pre[data-src]')\n  .forEach(codeBlock => promises.push(\n    fetch(`src/examples/${codeBlock.dataset.src}.svelte`)\n      .then(resp => resp.text())\n      .then(html => {\n        const codeEl = document.createElement('code');\n        codeEl.className = 'svelte';\n        codeEl.innerText = html.replaceAll(/(<\\/?script>)/g, '<!-- $1 -->');;\n        codeBlock.appendChild(codeEl);\n      })\n  ));\nPromise.all(promises).then(() => hljs.highlightAll());\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_custom_element_data","prop","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","i","length","option","__value","selected","select_value","selected_option","querySelector","toggle_class","toggle","classList","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","bubble","callbacks","type","slice","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","globals","window","globalThis","global","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","init","instance","create_fragment","not_equal","parent_component","on_disconnect","context","Map","skip_bound","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","$destroy","indexOf","splice","$$props","obj","$$set","keys","subscribe","store","unsub","unsubscribe","component_subscribe","create_slot","definition","$$scope","slot_ctx","get_slot_context","update_slot","slot","slot_definition","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","merged","len","Math","max","get_slot_changes","slot_context","null_to_empty","set_store_value","set","destroy_each","iterations","empty","crossorigin","is_crossorigin","parent","error","HtmlTag","e","n","html","nodeName","t","h","innerHTML","onDestroy","createEventDispatcher","detail","createEvent","initCustomEvent","custom_event","tick","group_outros","r","check_outros","outro_and_destroy_block","lookup","Sifter","items","settings","diacritics","prototype","tokenize","query","respect_word_boundaries","trim","String","toLowerCase","regex","letter","tokens","words","split","escape_regex","DIACRITICS","hasOwnProperty","replace","RegExp","string","iterator","object","isArray","apply","getScoreFunction","search","fields","token_count","nesting","prepareSearch","field_count","scoreValue","token","score","pos","scoreObject","getattr","sum","conjunction","getSortFunction","self","field","fields_count","multiplier","multipliers","get_field","implicit_score","sort","sort_empty","result","id","unshift","direction","cmp","option_fields","extend","option_sort","option_sort_empty","total","fn_sort","fn_score","item","limit","asciifold","arguments","names","shift","str","f","g","j","q","s","u","v","w","x","y","z","chunk","foreignletters","substring","charAt","regexp","foreignletter","timeout","itemHtml","xhr","highlightSearch","isSelected","$inputValue","formatter","itemHtmlText","className","pat","highlight","outerHTML","skip","nodeType","folded","substr","toUpperCase","spannode","middlebit","splitText","middleclone","cloneNode","replaceChild","test","tagName","fieldInit","config","isValue","isOptionArray","val","firstItem","autoAddItem","guessList","includes","concat","valueField","labelField","required","placeholder","searchable","disabled","clearable","selectOnTab","multiple","collapseSelection","creatable","creatablePrefix","delimiter","virtualList","vlItemSize","vlHeight","sortRemoteResults","i18n","nomatch","num","fetchBefore","fetchEmpty","collapsedSelection","count","collapseSelectionFn","selectionCount","selection","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","invalidate","subscriber","flatList","flatOpts","reduce","res","opt","optionsWithGroups","label","$isGroupHeader","_opt","$isGroupItem","optionProps","some","exclude","getFilterProps","updateOptionProps","getComputedStyle","position","iframe","tabIndex","source","contentWindow","onload","stopPropagation","inputValue","hasDropdownOpened","selectedOptions","inputRef","shadowWidth","dispatch","disableEventBubble","isSingleFilled","placeholderText","shadowText","widthAddition","inputStyle","$hasDropdownOpened","stopImmediatePropagation","focus","mouseDownAction","selectAction","eventType","closest","dispatchEvent","CustomEvent","hoverAction","onmousedown","onclick","updated","_created","action_result","destroy","isDisabled","isMultiple","renderer","hasFocus","isFetchingData","refInput","doCollapse","$hasFocus","setTimeout","ALIGNMENT","DIRECTION","HORIZONTAL","VERTICAL","SCROLL_CHANGE_REASON","SCROLL_PROP","SizeAndPositionManager","itemSize","itemCount","estimatedItemSize","itemSizeAndPositionData","lastMeasuredIndex","checkForMismatchItemSizeAndItemCount","justInTime","computeTotalSizeAndPositionData","totalSize","size","getSize","offset","getJustInTimeSizeAndPositionForIndex","lastMeasuredSizeAndPosition","getSizeAndPositionOfLastMeasuredItem","isNaN","align","containerSize","currentOffset","targetIndex","datum","getSizeAndPositionForIndex","maxOffset","minOffset","idealOffset","min","getTotalSize","overscanCount","findNearestItem","binarySearch","high","low","exponentialSearch","middle","floor","interval","old_blocks","get_key","dynamic","list","create_each_block","next","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","thirdEventArg","arg","defineProperty","passive","remove","height","width","stickyIndices","scrollDirection","scrollOffset","scrollToIndex","scrollToAlignment","sizeAndPositionManager","getEstimatedItemSize","wrapper","mounted","state","getOffsetForIndex","scrollChangeReason","prevState","prevProps","styleCache","wrapperStyle","innerStyle","refresh","getVisibleRange","updatedItems","hasStickyIndices","getStyle","startIndex","stopIndex","scrollTo","recomputeSizes","resetItem","_itemCount","getUpdatedOffsetForIndex","handleScroll","sticky","scrollPropsHaveChanged","itemPropsHaveChanged","updateConfig","propsUpdated","stateUpdated","maxReached","dropdownIndex","alreadyCreated","listIndex","listMessage","container","scrollContainer","refVirtualList","isMounted","hasEmptyList","vl_height","vl_itemSize","vl_autoMode","positionDropdown","outVp","elem","bounding","getBoundingClientRect","out","top","left","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","any","isOutOfViewport","parentElement","virtualListDimensionsResolver","pixelGetter","el","styles","groups","unit","match","parseFloat","fontSize","firstElementChild","firstSize","secondItem","nextElementSibling","secondSize","groupHeaderSize","regularItemSize","dropdownStateSubscription","currentListLength","vl_listHeight","params","focusedEl","focusedRect","menuRect","overScroll","offsetHeight","offsetTop","scrollTop","formatterList","addFormatter","formatFn","defaults","fetch","fetchMode","fetchCallback","searchField","sortField","labelAsValue","itemConfig","refDropdown","refControl","isInitialized","initialValue","ignoreHover","dropdownActiveIndex","fetchUnsubscribe","currentValueField","currentLabelField","endsWith","createFetch","fetchSource","url","cb","reject","XMLHttpRequest","open","encodeURIComponent","setRequestHeader","send","onreadystatechange","readyState","status","resp","JSON","parse","response","initFetchOnly","debouncedFetch","catch","finally","delay","args","clearTimeout","abort","prevSelection","prevOptions","emitChangeEvent","_selectByValues","values","newAddition","availableItems","selectOption","deselectOption","clearSelection","onSelect","onDeselect","focusControl","valueProp","flatItems","findIndex","scrollIntoView","ivalue","ilabel","_selectionArray","_unifiedSelection","Event","excludeSelected","sifterSearchField","sifterSortField","idx","sifter","startsWith","lastPos","prevItems","prev","filterList","includeCreateRow","last","hasCreateRow","curr","prevOnUndefined","indexList","itemRenderer","default","Tab","shiftKey","activeDropdownItem","ctrlKey","rx","pasted","clipboardData","getData","replaceAll","matches","onlyValues","doDisable","dataset","countryGroups","countries","colors","hex","stringify","colorRenderer","iconValue","iconSlot","levels","updates","to_null_out","accounted_for","spread_props","user","email","street","address","suite","city","fetchRenderer","join","myValue","dataSrc","classSelection","remotes","json","slots","opts","tags","isFlexWidth","optionsList","remoteValue","prevRemoteValue","class","setSelection","checked","parseInt","OPTION_LIST","formatValue","_v","getElementById","formatProp","SvelecteElement","HTMLElement","super","svelecte","_fetchOpts","setOptions","defineProperties","getSelection","hasAttribute","observedAttributes","oldValue","newValue","$set","render","parentCallback","clearByParent","fetchUrl","anchorSelect","Svelecte","$on","optionList","optionRenderer","customElements","define","onchange","alert","console","log","lastElementChild","rmBtn","textContent","payload","FormData","Vue","methods","template","promises","querySelectorAll","codeBlock","codeEl","innerText","all","hljs","highlightAll"],"mappings":"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AM,WAER,CACEgB,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,IACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,gBAGV,CACE2W,MAAO,IACPpW,QAAS,CAAC,CACRS,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,0BAER,CACEgB,MAAO,KACPhB,KAAM,cAGV,CACE2W,MAAO,IACPpW,QAAS,CAAC,CACRS,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,UAER,CACEgB,MAAO,KACPhB,KAAM,cAIZ0qB,UAAW,IAAM,CACf,CACE1pB,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,IACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,cAER,CACEgB,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,0BAER,CACEgB,MAAO,KACPhB,KAAM,YAER,CACEgB,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,UAER,CACEgB,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,UAER,CACEgB,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,UAER,CACEgB,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,WAER,CACEgB,MAAO,KACPhB,KAAM,SAER,CACEgB,MAAO,KACPhB,KAAM,UAER,CACEgB,MAAO,KACPhB,KAAM,UAER,CACEgB,MAAO,KACPhB,KAAM,iBAER,CACEgB,MAAO,KACPhB,KAAM,aAER,CACEgB,MAAO,KACPhB,KAAM,cAER,CACEgB,MAAO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"}